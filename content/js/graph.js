/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 75.0, "minX": 0.0, "maxY": 43191.0, "series": [{"data": [[0.0, 225.0], [0.1, 225.0], [0.2, 225.0], [0.3, 225.0], [0.4, 228.0], [0.5, 228.0], [0.6, 228.0], [0.7, 228.0], [0.8, 231.0], [0.9, 231.0], [1.0, 231.0], [1.1, 231.0], [1.2, 231.0], [1.3, 235.0], [1.4, 235.0], [1.5, 235.0], [1.6, 236.0], [1.7, 236.0], [1.8, 236.0], [1.9, 236.0], [2.0, 236.0], [2.1, 236.0], [2.2, 236.0], [2.3, 236.0], [2.4, 236.0], [2.5, 238.0], [2.6, 238.0], [2.7, 238.0], [2.8, 238.0], [2.9, 251.0], [3.0, 251.0], [3.1, 251.0], [3.2, 253.0], [3.3, 253.0], [3.4, 253.0], [3.5, 253.0], [3.6, 259.0], [3.7, 259.0], [3.8, 259.0], [3.9, 259.0], [4.0, 261.0], [4.1, 261.0], [4.2, 261.0], [4.3, 261.0], [4.4, 263.0], [4.5, 263.0], [4.6, 263.0], [4.7, 263.0], [4.8, 263.0], [4.9, 266.0], [5.0, 266.0], [5.1, 266.0], [5.2, 266.0], [5.3, 272.0], [5.4, 272.0], [5.5, 272.0], [5.6, 272.0], [5.7, 280.0], [5.8, 280.0], [5.9, 280.0], [6.0, 280.0], [6.1, 287.0], [6.2, 287.0], [6.3, 287.0], [6.4, 287.0], [6.5, 310.0], [6.6, 310.0], [6.7, 310.0], [6.8, 310.0], [6.9, 362.0], [7.0, 362.0], [7.1, 362.0], [7.2, 362.0], [7.3, 367.0], [7.4, 367.0], [7.5, 367.0], [7.6, 367.0], [7.7, 581.0], [7.8, 581.0], [7.9, 581.0], [8.0, 581.0], [8.1, 716.0], [8.2, 716.0], [8.3, 716.0], [8.4, 716.0], [8.5, 756.0], [8.6, 756.0], [8.7, 756.0], [8.8, 756.0], [8.9, 763.0], [9.0, 763.0], [9.1, 763.0], [9.2, 763.0], [9.3, 786.0], [9.4, 786.0], [9.5, 786.0], [9.6, 786.0], [9.7, 800.0], [9.8, 800.0], [9.9, 800.0], [10.0, 800.0], [10.1, 807.0], [10.2, 807.0], [10.3, 807.0], [10.4, 807.0], [10.5, 807.0], [10.6, 807.0], [10.7, 807.0], [10.8, 807.0], [10.9, 807.0], [11.0, 807.0], [11.1, 807.0], [11.2, 807.0], [11.3, 827.0], [11.4, 827.0], [11.5, 827.0], [11.6, 827.0], [11.7, 860.0], [11.8, 860.0], [11.9, 860.0], [12.0, 860.0], [12.1, 877.0], [12.2, 877.0], [12.3, 877.0], [12.4, 877.0], [12.5, 878.0], [12.6, 878.0], [12.7, 878.0], [12.8, 878.0], [12.9, 888.0], [13.0, 888.0], [13.1, 888.0], [13.2, 888.0], [13.3, 894.0], [13.4, 894.0], [13.5, 894.0], [13.6, 894.0], [13.7, 912.0], [13.8, 912.0], [13.9, 912.0], [14.0, 912.0], [14.1, 913.0], [14.2, 913.0], [14.3, 913.0], [14.4, 913.0], [14.5, 915.0], [14.6, 915.0], [14.7, 915.0], [14.8, 915.0], [14.9, 941.0], [15.0, 941.0], [15.1, 941.0], [15.2, 941.0], [15.3, 942.0], [15.4, 942.0], [15.5, 942.0], [15.6, 942.0], [15.7, 954.0], [15.8, 954.0], [15.9, 954.0], [16.0, 954.0], [16.1, 957.0], [16.2, 957.0], [16.3, 957.0], [16.4, 957.0], [16.5, 962.0], [16.6, 962.0], [16.7, 962.0], [16.8, 962.0], [16.9, 983.0], [17.0, 983.0], [17.1, 983.0], [17.2, 983.0], [17.3, 985.0], [17.4, 985.0], [17.5, 985.0], [17.6, 986.0], [17.7, 986.0], [17.8, 986.0], [17.9, 986.0], [18.0, 987.0], [18.1, 987.0], [18.2, 987.0], [18.3, 987.0], [18.4, 988.0], [18.5, 988.0], [18.6, 988.0], [18.7, 988.0], [18.8, 1010.0], [18.9, 1010.0], [19.0, 1010.0], [19.1, 1010.0], [19.2, 1014.0], [19.3, 1014.0], [19.4, 1014.0], [19.5, 1014.0], [19.6, 1027.0], [19.7, 1027.0], [19.8, 1027.0], [19.9, 1027.0], [20.0, 1040.0], [20.1, 1040.0], [20.2, 1040.0], [20.3, 1040.0], [20.4, 1045.0], [20.5, 1045.0], [20.6, 1045.0], [20.7, 1045.0], [20.8, 1045.0], [20.9, 1045.0], [21.0, 1045.0], [21.1, 1045.0], [21.2, 1049.0], [21.3, 1049.0], [21.4, 1049.0], [21.5, 1049.0], [21.6, 1059.0], [21.7, 1059.0], [21.8, 1059.0], [21.9, 1059.0], [22.0, 1069.0], [22.1, 1069.0], [22.2, 1069.0], [22.3, 1069.0], [22.4, 1080.0], [22.5, 1080.0], [22.6, 1080.0], [22.7, 1080.0], [22.8, 1087.0], [22.9, 1087.0], [23.0, 1087.0], [23.1, 1087.0], [23.2, 1102.0], [23.3, 1102.0], [23.4, 1102.0], [23.5, 1102.0], [23.6, 1115.0], [23.7, 1115.0], [23.8, 1115.0], [23.9, 1115.0], [24.0, 1117.0], [24.1, 1117.0], [24.2, 1117.0], [24.3, 1117.0], [24.4, 1126.0], [24.5, 1126.0], [24.6, 1126.0], [24.7, 1126.0], [24.8, 1142.0], [24.9, 1142.0], [25.0, 1142.0], [25.1, 1142.0], [25.2, 1145.0], [25.3, 1145.0], [25.4, 1145.0], [25.5, 1145.0], [25.6, 1145.0], [25.7, 1145.0], [25.8, 1145.0], [25.9, 1145.0], [26.0, 1150.0], [26.1, 1150.0], [26.2, 1150.0], [26.3, 1150.0], [26.4, 1162.0], [26.5, 1162.0], [26.6, 1162.0], [26.7, 1162.0], [26.8, 1163.0], [26.9, 1163.0], [27.0, 1163.0], [27.1, 1163.0], [27.2, 1167.0], [27.3, 1167.0], [27.4, 1167.0], [27.5, 1167.0], [27.6, 1183.0], [27.7, 1183.0], [27.8, 1183.0], [27.9, 1183.0], [28.0, 1198.0], [28.1, 1198.0], [28.2, 1198.0], [28.3, 1198.0], [28.4, 1225.0], [28.5, 1225.0], [28.6, 1225.0], [28.7, 1225.0], [28.8, 1235.0], [28.9, 1235.0], [29.0, 1235.0], [29.1, 1235.0], [29.2, 1287.0], [29.3, 1287.0], [29.4, 1287.0], [29.5, 1287.0], [29.6, 1304.0], [29.7, 1304.0], [29.8, 1304.0], [29.9, 1304.0], [30.0, 1316.0], [30.1, 1316.0], [30.2, 1316.0], [30.3, 1316.0], [30.4, 1325.0], [30.5, 1325.0], [30.6, 1325.0], [30.7, 1325.0], [30.8, 1330.0], [30.9, 1330.0], [31.0, 1330.0], [31.1, 1330.0], [31.2, 1333.0], [31.3, 1333.0], [31.4, 1333.0], [31.5, 1333.0], [31.6, 1355.0], [31.7, 1355.0], [31.8, 1355.0], [31.9, 1355.0], [32.0, 1368.0], [32.1, 1368.0], [32.2, 1368.0], [32.3, 1368.0], [32.4, 1402.0], [32.5, 1402.0], [32.6, 1402.0], [32.7, 1402.0], [32.8, 1427.0], [32.9, 1427.0], [33.0, 1427.0], [33.1, 1427.0], [33.2, 1435.0], [33.3, 1435.0], [33.4, 1435.0], [33.5, 1435.0], [33.6, 1449.0], [33.7, 1449.0], [33.8, 1449.0], [33.9, 1449.0], [34.0, 1457.0], [34.1, 1457.0], [34.2, 1457.0], [34.3, 1457.0], [34.4, 1471.0], [34.5, 1471.0], [34.6, 1471.0], [34.7, 1471.0], [34.8, 1490.0], [34.9, 1490.0], [35.0, 1490.0], [35.1, 1490.0], [35.2, 1516.0], [35.3, 1516.0], [35.4, 1516.0], [35.5, 1516.0], [35.6, 1557.0], [35.7, 1557.0], [35.8, 1557.0], [35.9, 1557.0], [36.0, 1569.0], [36.1, 1569.0], [36.2, 1569.0], [36.3, 1569.0], [36.4, 1586.0], [36.5, 1586.0], [36.6, 1586.0], [36.7, 1586.0], [36.8, 1607.0], [36.9, 1607.0], [37.0, 1607.0], [37.1, 1607.0], [37.2, 1643.0], [37.3, 1643.0], [37.4, 1643.0], [37.5, 1643.0], [37.6, 1667.0], [37.7, 1667.0], [37.8, 1667.0], [37.9, 1667.0], [38.0, 1680.0], [38.1, 1680.0], [38.2, 1680.0], [38.3, 1680.0], [38.4, 1689.0], [38.5, 1689.0], [38.6, 1689.0], [38.7, 1689.0], [38.8, 1712.0], [38.9, 1712.0], [39.0, 1712.0], [39.1, 1712.0], [39.2, 1736.0], [39.3, 1736.0], [39.4, 1736.0], [39.5, 1736.0], [39.6, 1813.0], [39.7, 1813.0], [39.8, 1813.0], [39.9, 1813.0], [40.0, 1815.0], [40.1, 1815.0], [40.2, 1815.0], [40.3, 1815.0], [40.4, 1842.0], [40.5, 1842.0], [40.6, 1842.0], [40.7, 1842.0], [40.8, 1855.0], [40.9, 1855.0], [41.0, 1855.0], [41.1, 1855.0], [41.2, 1866.0], [41.3, 1866.0], [41.4, 1866.0], [41.5, 1866.0], [41.6, 1878.0], [41.7, 1878.0], [41.8, 1878.0], [41.9, 1878.0], [42.0, 1894.0], [42.1, 1894.0], [42.2, 1894.0], [42.3, 1894.0], [42.4, 1902.0], [42.5, 1902.0], [42.6, 1902.0], [42.7, 1902.0], [42.8, 1908.0], [42.9, 1908.0], [43.0, 1908.0], [43.1, 1908.0], [43.2, 1935.0], [43.3, 1935.0], [43.4, 1935.0], [43.5, 1935.0], [43.6, 1940.0], [43.7, 1940.0], [43.8, 1940.0], [43.9, 1940.0], [44.0, 1953.0], [44.1, 1953.0], [44.2, 1953.0], [44.3, 1953.0], [44.4, 1989.0], [44.5, 1989.0], [44.6, 1989.0], [44.7, 1989.0], [44.8, 1997.0], [44.9, 1997.0], [45.0, 1997.0], [45.1, 1997.0], [45.2, 2022.0], [45.3, 2022.0], [45.4, 2022.0], [45.5, 2022.0], [45.6, 2037.0], [45.7, 2037.0], [45.8, 2037.0], [45.9, 2037.0], [46.0, 2039.0], [46.1, 2039.0], [46.2, 2039.0], [46.3, 2039.0], [46.4, 2050.0], [46.5, 2050.0], [46.6, 2050.0], [46.7, 2050.0], [46.8, 2059.0], [46.9, 2059.0], [47.0, 2059.0], [47.1, 2059.0], [47.2, 2067.0], [47.3, 2067.0], [47.4, 2067.0], [47.5, 2067.0], [47.6, 2104.0], [47.7, 2104.0], [47.8, 2104.0], [47.9, 2104.0], [48.0, 2114.0], [48.1, 2114.0], [48.2, 2114.0], [48.3, 2114.0], [48.4, 2115.0], [48.5, 2115.0], [48.6, 2115.0], [48.7, 2115.0], [48.8, 2161.0], [48.9, 2161.0], [49.0, 2161.0], [49.1, 2161.0], [49.2, 2175.0], [49.3, 2175.0], [49.4, 2175.0], [49.5, 2175.0], [49.6, 2199.0], [49.7, 2199.0], [49.8, 2199.0], [49.9, 2199.0], [50.0, 2204.0], [50.1, 2204.0], [50.2, 2204.0], [50.3, 2204.0], [50.4, 2255.0], [50.5, 2255.0], [50.6, 2255.0], [50.7, 2255.0], [50.8, 2259.0], [50.9, 2259.0], [51.0, 2259.0], [51.1, 2259.0], [51.2, 2278.0], [51.3, 2278.0], [51.4, 2278.0], [51.5, 2278.0], [51.6, 2281.0], [51.7, 2281.0], [51.8, 2281.0], [51.9, 2281.0], [52.0, 2325.0], [52.1, 2325.0], [52.2, 2325.0], [52.3, 2325.0], [52.4, 2346.0], [52.5, 2346.0], [52.6, 2346.0], [52.7, 2346.0], [52.8, 2382.0], [52.9, 2382.0], [53.0, 2382.0], [53.1, 2382.0], [53.2, 2412.0], [53.3, 2412.0], [53.4, 2412.0], [53.5, 2412.0], [53.6, 2469.0], [53.7, 2469.0], [53.8, 2469.0], [53.9, 2469.0], [54.0, 2470.0], [54.1, 2470.0], [54.2, 2470.0], [54.3, 2470.0], [54.4, 2506.0], [54.5, 2506.0], [54.6, 2506.0], [54.7, 2506.0], [54.8, 2507.0], [54.9, 2507.0], [55.0, 2507.0], [55.1, 2507.0], [55.2, 2534.0], [55.3, 2534.0], [55.4, 2534.0], [55.5, 2534.0], [55.6, 2546.0], [55.7, 2546.0], [55.8, 2546.0], [55.9, 2546.0], [56.0, 2550.0], [56.1, 2550.0], [56.2, 2550.0], [56.3, 2550.0], [56.4, 2698.0], [56.5, 2698.0], [56.6, 2698.0], [56.7, 2698.0], [56.8, 2762.0], [56.9, 2762.0], [57.0, 2762.0], [57.1, 2762.0], [57.2, 2807.0], [57.3, 2807.0], [57.4, 2807.0], [57.5, 2807.0], [57.6, 2817.0], [57.7, 2817.0], [57.8, 2817.0], [57.9, 2817.0], [58.0, 2842.0], [58.1, 2842.0], [58.2, 2842.0], [58.3, 2842.0], [58.4, 2881.0], [58.5, 2881.0], [58.6, 2881.0], [58.7, 2881.0], [58.8, 2886.0], [58.9, 2886.0], [59.0, 2886.0], [59.1, 2886.0], [59.2, 2899.0], [59.3, 2899.0], [59.4, 2899.0], [59.5, 2899.0], [59.6, 2929.0], [59.7, 2929.0], [59.8, 2929.0], [59.9, 2929.0], [60.0, 2935.0], [60.1, 2935.0], [60.2, 2935.0], [60.3, 2935.0], [60.4, 2990.0], [60.5, 2990.0], [60.6, 2990.0], [60.7, 2990.0], [60.8, 3010.0], [60.9, 3010.0], [61.0, 3010.0], [61.1, 3010.0], [61.2, 3121.0], [61.3, 3121.0], [61.4, 3121.0], [61.5, 3121.0], [61.6, 3184.0], [61.7, 3184.0], [61.8, 3184.0], [61.9, 3184.0], [62.0, 3221.0], [62.1, 3221.0], [62.2, 3221.0], [62.3, 3221.0], [62.4, 3221.0], [62.5, 3221.0], [62.6, 3221.0], [62.7, 3221.0], [62.8, 3247.0], [62.9, 3247.0], [63.0, 3247.0], [63.1, 3247.0], [63.2, 3258.0], [63.3, 3258.0], [63.4, 3258.0], [63.5, 3258.0], [63.6, 3282.0], [63.7, 3282.0], [63.8, 3282.0], [63.9, 3282.0], [64.0, 3319.0], [64.1, 3319.0], [64.2, 3319.0], [64.3, 3319.0], [64.4, 3320.0], [64.5, 3320.0], [64.6, 3320.0], [64.7, 3320.0], [64.8, 3472.0], [64.9, 3472.0], [65.0, 3472.0], [65.1, 3472.0], [65.2, 3653.0], [65.3, 3653.0], [65.4, 3653.0], [65.5, 3653.0], [65.6, 3740.0], [65.7, 3740.0], [65.8, 3740.0], [65.9, 3740.0], [66.0, 3745.0], [66.1, 3745.0], [66.2, 3745.0], [66.3, 3745.0], [66.4, 3835.0], [66.5, 3835.0], [66.6, 3835.0], [66.7, 3835.0], [66.8, 3916.0], [66.9, 3916.0], [67.0, 3916.0], [67.1, 3916.0], [67.2, 3929.0], [67.3, 3929.0], [67.4, 3929.0], [67.5, 3929.0], [67.6, 3946.0], [67.7, 3946.0], [67.8, 3946.0], [67.9, 3946.0], [68.0, 3962.0], [68.1, 3962.0], [68.2, 3962.0], [68.3, 3962.0], [68.4, 3983.0], [68.5, 3983.0], [68.6, 3983.0], [68.7, 3983.0], [68.8, 4035.0], [68.9, 4035.0], [69.0, 4035.0], [69.1, 4035.0], [69.2, 4118.0], [69.3, 4118.0], [69.4, 4118.0], [69.5, 4118.0], [69.6, 4158.0], [69.7, 4158.0], [69.8, 4158.0], [69.9, 4158.0], [70.0, 4159.0], [70.1, 4159.0], [70.2, 4159.0], [70.3, 4159.0], [70.4, 4359.0], [70.5, 4359.0], [70.6, 4359.0], [70.7, 4359.0], [70.8, 4372.0], [70.9, 4372.0], [71.0, 4372.0], [71.1, 4372.0], [71.2, 4447.0], [71.3, 4447.0], [71.4, 4447.0], [71.5, 4447.0], [71.6, 4468.0], [71.7, 4468.0], [71.8, 4468.0], [71.9, 4468.0], [72.0, 4837.0], [72.1, 4837.0], [72.2, 4837.0], [72.3, 4837.0], [72.4, 5004.0], [72.5, 5004.0], [72.6, 5004.0], [72.7, 5004.0], [72.8, 5054.0], [72.9, 5054.0], [73.0, 5054.0], [73.1, 5054.0], [73.2, 5082.0], [73.3, 5082.0], [73.4, 5082.0], [73.5, 5082.0], [73.6, 5199.0], [73.7, 5199.0], [73.8, 5199.0], [73.9, 5199.0], [74.0, 5230.0], [74.1, 5230.0], [74.2, 5230.0], [74.3, 5230.0], [74.4, 5293.0], [74.5, 5293.0], [74.6, 5293.0], [74.7, 5293.0], [74.8, 5929.0], [74.9, 5929.0], [75.0, 5929.0], [75.1, 5929.0], [75.2, 6179.0], [75.3, 6179.0], [75.4, 6179.0], [75.5, 6179.0], [75.6, 6179.0], [75.7, 6291.0], [75.8, 6291.0], [75.9, 6291.0], [76.0, 6291.0], [76.1, 6700.0], [76.2, 6700.0], [76.3, 6700.0], [76.4, 6700.0], [76.5, 6755.0], [76.6, 6755.0], [76.7, 6755.0], [76.8, 6755.0], [76.9, 7557.0], [77.0, 7557.0], [77.1, 7557.0], [77.2, 7557.0], [77.3, 7862.0], [77.4, 7862.0], [77.5, 7862.0], [77.6, 7862.0], [77.7, 7896.0], [77.8, 7896.0], [77.9, 7896.0], [78.0, 7896.0], [78.1, 7995.0], [78.2, 7995.0], [78.3, 7995.0], [78.4, 7995.0], [78.5, 8066.0], [78.6, 8066.0], [78.7, 8066.0], [78.8, 8066.0], [78.9, 8117.0], [79.0, 8117.0], [79.1, 8117.0], [79.2, 8117.0], [79.3, 8160.0], [79.4, 8160.0], [79.5, 8160.0], [79.6, 8160.0], [79.7, 8290.0], [79.8, 8290.0], [79.9, 8290.0], [80.0, 8290.0], [80.1, 8351.0], [80.2, 8351.0], [80.3, 8351.0], [80.4, 8351.0], [80.5, 8419.0], [80.6, 8419.0], [80.7, 8419.0], [80.8, 8419.0], [80.9, 8474.0], [81.0, 8474.0], [81.1, 8474.0], [81.2, 8474.0], [81.3, 8480.0], [81.4, 8480.0], [81.5, 8480.0], [81.6, 8480.0], [81.7, 8599.0], [81.8, 8599.0], [81.9, 8599.0], [82.0, 8599.0], [82.1, 8644.0], [82.2, 8644.0], [82.3, 8644.0], [82.4, 8644.0], [82.5, 8662.0], [82.6, 8662.0], [82.7, 8662.0], [82.8, 8662.0], [82.9, 9115.0], [83.0, 9115.0], [83.1, 9115.0], [83.2, 9115.0], [83.3, 9218.0], [83.4, 9218.0], [83.5, 9218.0], [83.6, 9218.0], [83.7, 9315.0], [83.8, 9315.0], [83.9, 9315.0], [84.0, 9315.0], [84.1, 9334.0], [84.2, 9334.0], [84.3, 9334.0], [84.4, 9334.0], [84.5, 9505.0], [84.6, 9505.0], [84.7, 9505.0], [84.8, 9505.0], [84.9, 9524.0], [85.0, 9524.0], [85.1, 9524.0], [85.2, 9524.0], [85.3, 9661.0], [85.4, 9661.0], [85.5, 9661.0], [85.6, 9661.0], [85.7, 9754.0], [85.8, 9754.0], [85.9, 9754.0], [86.0, 9754.0], [86.1, 9899.0], [86.2, 9899.0], [86.3, 9899.0], [86.4, 9899.0], [86.5, 9984.0], [86.6, 9984.0], [86.7, 9984.0], [86.8, 9984.0], [86.9, 10051.0], [87.0, 10051.0], [87.1, 10051.0], [87.2, 10051.0], [87.3, 10123.0], [87.4, 10123.0], [87.5, 10123.0], [87.6, 10123.0], [87.7, 10211.0], [87.8, 10211.0], [87.9, 10211.0], [88.0, 10211.0], [88.1, 10322.0], [88.2, 10322.0], [88.3, 10322.0], [88.4, 10322.0], [88.5, 10343.0], [88.6, 10343.0], [88.7, 10343.0], [88.8, 10343.0], [88.9, 10408.0], [89.0, 10408.0], [89.1, 10408.0], [89.2, 10408.0], [89.3, 10768.0], [89.4, 10768.0], [89.5, 10768.0], [89.6, 10768.0], [89.7, 11143.0], [89.8, 11143.0], [89.9, 11143.0], [90.0, 11143.0], [90.1, 11217.0], [90.2, 11217.0], [90.3, 11217.0], [90.4, 11217.0], [90.5, 11598.0], [90.6, 11598.0], [90.7, 11598.0], [90.8, 11598.0], [90.9, 11816.0], [91.0, 11816.0], [91.1, 11816.0], [91.2, 11816.0], [91.3, 11829.0], [91.4, 11829.0], [91.5, 11829.0], [91.6, 11829.0], [91.7, 12669.0], [91.8, 12669.0], [91.9, 12669.0], [92.0, 12669.0], [92.1, 13152.0], [92.2, 13152.0], [92.3, 13152.0], [92.4, 13152.0], [92.5, 13382.0], [92.6, 13382.0], [92.7, 13382.0], [92.8, 13382.0], [92.9, 13900.0], [93.0, 13900.0], [93.1, 13900.0], [93.2, 13900.0], [93.3, 13978.0], [93.4, 13978.0], [93.5, 13978.0], [93.6, 13978.0], [93.7, 14266.0], [93.8, 14266.0], [93.9, 14266.0], [94.0, 14266.0], [94.1, 14956.0], [94.2, 14956.0], [94.3, 14956.0], [94.4, 14956.0], [94.5, 16190.0], [94.6, 16190.0], [94.7, 16190.0], [94.8, 16190.0], [94.9, 16217.0], [95.0, 16217.0], [95.1, 16217.0], [95.2, 16217.0], [95.3, 16246.0], [95.4, 16246.0], [95.5, 16246.0], [95.6, 16246.0], [95.7, 16313.0], [95.8, 16313.0], [95.9, 16313.0], [96.0, 16313.0], [96.1, 17252.0], [96.2, 17252.0], [96.3, 17252.0], [96.4, 17252.0], [96.5, 17597.0], [96.6, 17597.0], [96.7, 17597.0], [96.8, 17597.0], [96.9, 20120.0], [97.0, 20120.0], [97.1, 20120.0], [97.2, 20120.0], [97.3, 20974.0], [97.4, 20974.0], [97.5, 20974.0], [97.6, 20974.0], [97.7, 21029.0], [97.8, 21029.0], [97.9, 21029.0], [98.0, 21029.0], [98.1, 21034.0], [98.2, 21034.0], [98.3, 21034.0], [98.4, 21034.0], [98.5, 21050.0], [98.6, 21050.0], [98.7, 21050.0], [98.8, 21050.0], [98.9, 21059.0], [99.0, 21059.0], [99.1, 21059.0], [99.2, 21059.0], [99.3, 22849.0], [99.4, 22849.0], [99.5, 22849.0], [99.6, 22849.0], [99.7, 27132.0], [99.8, 27132.0], [99.9, 27132.0], [100.0, 27132.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[0.0, 763.0], [0.1, 763.0], [0.2, 763.0], [0.3, 763.0], [0.4, 898.0], [0.5, 898.0], [0.6, 898.0], [0.7, 898.0], [0.8, 1066.0], [0.9, 1066.0], [1.0, 1066.0], [1.1, 1066.0], [1.2, 1066.0], [1.3, 1239.0], [1.4, 1239.0], [1.5, 1239.0], [1.6, 1310.0], [1.7, 1310.0], [1.8, 1310.0], [1.9, 1310.0], [2.0, 1317.0], [2.1, 1317.0], [2.2, 1317.0], [2.3, 1317.0], [2.4, 1438.0], [2.5, 1438.0], [2.6, 1438.0], [2.7, 1438.0], [2.8, 1550.0], [2.9, 1550.0], [3.0, 1550.0], [3.1, 1550.0], [3.2, 1554.0], [3.3, 1554.0], [3.4, 1554.0], [3.5, 1554.0], [3.6, 1585.0], [3.7, 1585.0], [3.8, 1585.0], [3.9, 1585.0], [4.0, 1640.0], [4.1, 1640.0], [4.2, 1640.0], [4.3, 1640.0], [4.4, 1678.0], [4.5, 1678.0], [4.6, 1678.0], [4.7, 1678.0], [4.8, 1683.0], [4.9, 1683.0], [5.0, 1683.0], [5.1, 1683.0], [5.2, 1700.0], [5.3, 1700.0], [5.4, 1700.0], [5.5, 1700.0], [5.6, 1700.0], [5.7, 1797.0], [5.8, 1797.0], [5.9, 1797.0], [6.0, 1797.0], [6.1, 1962.0], [6.2, 1962.0], [6.3, 1962.0], [6.4, 1962.0], [6.5, 2042.0], [6.6, 2042.0], [6.7, 2042.0], [6.8, 2042.0], [6.9, 2110.0], [7.0, 2110.0], [7.1, 2110.0], [7.2, 2110.0], [7.3, 2111.0], [7.4, 2111.0], [7.5, 2111.0], [7.6, 2111.0], [7.7, 2129.0], [7.8, 2129.0], [7.9, 2129.0], [8.0, 2129.0], [8.1, 2158.0], [8.2, 2158.0], [8.3, 2158.0], [8.4, 2158.0], [8.5, 2217.0], [8.6, 2217.0], [8.7, 2217.0], [8.8, 2217.0], [8.9, 2283.0], [9.0, 2283.0], [9.1, 2283.0], [9.2, 2283.0], [9.3, 2283.0], [9.4, 2283.0], [9.5, 2283.0], [9.6, 2283.0], [9.7, 2300.0], [9.8, 2300.0], [9.9, 2300.0], [10.0, 2300.0], [10.1, 2354.0], [10.2, 2354.0], [10.3, 2354.0], [10.4, 2354.0], [10.5, 2403.0], [10.6, 2403.0], [10.7, 2403.0], [10.8, 2403.0], [10.9, 2458.0], [11.0, 2458.0], [11.1, 2458.0], [11.2, 2458.0], [11.3, 2542.0], [11.4, 2542.0], [11.5, 2542.0], [11.6, 2542.0], [11.7, 2628.0], [11.8, 2628.0], [11.9, 2628.0], [12.0, 2628.0], [12.1, 2681.0], [12.2, 2681.0], [12.3, 2681.0], [12.4, 2681.0], [12.5, 2723.0], [12.6, 2723.0], [12.7, 2723.0], [12.8, 2723.0], [12.9, 2736.0], [13.0, 2736.0], [13.1, 2736.0], [13.2, 2736.0], [13.3, 2815.0], [13.4, 2815.0], [13.5, 2815.0], [13.6, 2815.0], [13.7, 2824.0], [13.8, 2824.0], [13.9, 2824.0], [14.0, 2824.0], [14.1, 2829.0], [14.2, 2829.0], [14.3, 2829.0], [14.4, 2829.0], [14.5, 2888.0], [14.6, 2888.0], [14.7, 2888.0], [14.8, 2888.0], [14.9, 2896.0], [15.0, 2896.0], [15.1, 2896.0], [15.2, 2896.0], [15.3, 2905.0], [15.4, 2905.0], [15.5, 2905.0], [15.6, 2905.0], [15.7, 2911.0], [15.8, 2911.0], [15.9, 2911.0], [16.0, 2911.0], [16.1, 3016.0], [16.2, 3016.0], [16.3, 3016.0], [16.4, 3016.0], [16.5, 3041.0], [16.6, 3041.0], [16.7, 3041.0], [16.8, 3041.0], [16.9, 3082.0], [17.0, 3082.0], [17.1, 3082.0], [17.2, 3082.0], [17.3, 3120.0], [17.4, 3120.0], [17.5, 3120.0], [17.6, 3149.0], [17.7, 3149.0], [17.8, 3149.0], [17.9, 3149.0], [18.0, 3257.0], [18.1, 3257.0], [18.2, 3257.0], [18.3, 3257.0], [18.4, 3275.0], [18.5, 3275.0], [18.6, 3275.0], [18.7, 3275.0], [18.8, 3281.0], [18.9, 3281.0], [19.0, 3281.0], [19.1, 3281.0], [19.2, 3333.0], [19.3, 3333.0], [19.4, 3333.0], [19.5, 3333.0], [19.6, 3348.0], [19.7, 3348.0], [19.8, 3348.0], [19.9, 3348.0], [20.0, 3353.0], [20.1, 3353.0], [20.2, 3353.0], [20.3, 3353.0], [20.4, 3362.0], [20.5, 3362.0], [20.6, 3362.0], [20.7, 3362.0], [20.8, 3372.0], [20.9, 3372.0], [21.0, 3372.0], [21.1, 3372.0], [21.2, 3382.0], [21.3, 3382.0], [21.4, 3382.0], [21.5, 3382.0], [21.6, 3394.0], [21.7, 3394.0], [21.8, 3394.0], [21.9, 3394.0], [22.0, 3467.0], [22.1, 3467.0], [22.2, 3467.0], [22.3, 3467.0], [22.4, 3488.0], [22.5, 3488.0], [22.6, 3488.0], [22.7, 3488.0], [22.8, 3493.0], [22.9, 3493.0], [23.0, 3493.0], [23.1, 3493.0], [23.2, 3498.0], [23.3, 3498.0], [23.4, 3498.0], [23.5, 3498.0], [23.6, 3528.0], [23.7, 3528.0], [23.8, 3528.0], [23.9, 3528.0], [24.0, 3630.0], [24.1, 3630.0], [24.2, 3630.0], [24.3, 3630.0], [24.4, 3647.0], [24.5, 3647.0], [24.6, 3647.0], [24.7, 3647.0], [24.8, 3670.0], [24.9, 3670.0], [25.0, 3670.0], [25.1, 3670.0], [25.2, 3716.0], [25.3, 3716.0], [25.4, 3716.0], [25.5, 3716.0], [25.6, 3740.0], [25.7, 3740.0], [25.8, 3740.0], [25.9, 3740.0], [26.0, 3763.0], [26.1, 3763.0], [26.2, 3763.0], [26.3, 3763.0], [26.4, 3838.0], [26.5, 3838.0], [26.6, 3838.0], [26.7, 3838.0], [26.8, 3841.0], [26.9, 3841.0], [27.0, 3841.0], [27.1, 3841.0], [27.2, 3841.0], [27.3, 3841.0], [27.4, 3841.0], [27.5, 3841.0], [27.6, 3843.0], [27.7, 3843.0], [27.8, 3843.0], [27.9, 3843.0], [28.0, 3845.0], [28.1, 3845.0], [28.2, 3845.0], [28.3, 3845.0], [28.4, 3890.0], [28.5, 3890.0], [28.6, 3890.0], [28.7, 3890.0], [28.8, 3903.0], [28.9, 3903.0], [29.0, 3903.0], [29.1, 3903.0], [29.2, 3907.0], [29.3, 3907.0], [29.4, 3907.0], [29.5, 3907.0], [29.6, 3945.0], [29.7, 3945.0], [29.8, 3945.0], [29.9, 3945.0], [30.0, 3986.0], [30.1, 3986.0], [30.2, 3986.0], [30.3, 3986.0], [30.4, 4043.0], [30.5, 4043.0], [30.6, 4043.0], [30.7, 4043.0], [30.8, 4047.0], [30.9, 4047.0], [31.0, 4047.0], [31.1, 4047.0], [31.2, 4078.0], [31.3, 4078.0], [31.4, 4078.0], [31.5, 4078.0], [31.6, 4115.0], [31.7, 4115.0], [31.8, 4115.0], [31.9, 4115.0], [32.0, 4119.0], [32.1, 4119.0], [32.2, 4119.0], [32.3, 4119.0], [32.4, 4155.0], [32.5, 4155.0], [32.6, 4155.0], [32.7, 4155.0], [32.8, 4229.0], [32.9, 4229.0], [33.0, 4229.0], [33.1, 4229.0], [33.2, 4240.0], [33.3, 4240.0], [33.4, 4240.0], [33.5, 4240.0], [33.6, 4257.0], [33.7, 4257.0], [33.8, 4257.0], [33.9, 4257.0], [34.0, 4270.0], [34.1, 4270.0], [34.2, 4270.0], [34.3, 4270.0], [34.4, 4289.0], [34.5, 4289.0], [34.6, 4289.0], [34.7, 4289.0], [34.8, 4295.0], [34.9, 4295.0], [35.0, 4295.0], [35.1, 4295.0], [35.2, 4302.0], [35.3, 4302.0], [35.4, 4302.0], [35.5, 4302.0], [35.6, 4303.0], [35.7, 4303.0], [35.8, 4303.0], [35.9, 4303.0], [36.0, 4365.0], [36.1, 4365.0], [36.2, 4365.0], [36.3, 4365.0], [36.4, 4403.0], [36.5, 4403.0], [36.6, 4403.0], [36.7, 4403.0], [36.8, 4411.0], [36.9, 4411.0], [37.0, 4411.0], [37.1, 4411.0], [37.2, 4433.0], [37.3, 4433.0], [37.4, 4433.0], [37.5, 4433.0], [37.6, 4465.0], [37.7, 4465.0], [37.8, 4465.0], [37.9, 4465.0], [38.0, 4473.0], [38.1, 4473.0], [38.2, 4473.0], [38.3, 4473.0], [38.4, 4493.0], [38.5, 4493.0], [38.6, 4493.0], [38.7, 4493.0], [38.8, 4545.0], [38.9, 4545.0], [39.0, 4545.0], [39.1, 4545.0], [39.2, 4584.0], [39.3, 4584.0], [39.4, 4584.0], [39.5, 4584.0], [39.6, 4671.0], [39.7, 4671.0], [39.8, 4671.0], [39.9, 4671.0], [40.0, 4753.0], [40.1, 4753.0], [40.2, 4753.0], [40.3, 4753.0], [40.4, 4775.0], [40.5, 4775.0], [40.6, 4775.0], [40.7, 4775.0], [40.8, 4787.0], [40.9, 4787.0], [41.0, 4787.0], [41.1, 4787.0], [41.2, 4824.0], [41.3, 4824.0], [41.4, 4824.0], [41.5, 4824.0], [41.6, 4857.0], [41.7, 4857.0], [41.8, 4857.0], [41.9, 4857.0], [42.0, 4909.0], [42.1, 4909.0], [42.2, 4909.0], [42.3, 4909.0], [42.4, 4930.0], [42.5, 4930.0], [42.6, 4930.0], [42.7, 4930.0], [42.8, 4953.0], [42.9, 4953.0], [43.0, 4953.0], [43.1, 4953.0], [43.2, 5025.0], [43.3, 5025.0], [43.4, 5025.0], [43.5, 5025.0], [43.6, 5030.0], [43.7, 5030.0], [43.8, 5030.0], [43.9, 5030.0], [44.0, 5042.0], [44.1, 5042.0], [44.2, 5042.0], [44.3, 5042.0], [44.4, 5075.0], [44.5, 5075.0], [44.6, 5075.0], [44.7, 5075.0], [44.8, 5085.0], [44.9, 5085.0], [45.0, 5085.0], [45.1, 5085.0], [45.2, 5177.0], [45.3, 5177.0], [45.4, 5177.0], [45.5, 5177.0], [45.6, 5233.0], [45.7, 5233.0], [45.8, 5233.0], [45.9, 5233.0], [46.0, 5234.0], [46.1, 5234.0], [46.2, 5234.0], [46.3, 5234.0], [46.4, 5246.0], [46.5, 5246.0], [46.6, 5246.0], [46.7, 5246.0], [46.8, 5251.0], [46.9, 5251.0], [47.0, 5251.0], [47.1, 5251.0], [47.2, 5313.0], [47.3, 5313.0], [47.4, 5313.0], [47.5, 5313.0], [47.6, 5321.0], [47.7, 5321.0], [47.8, 5321.0], [47.9, 5321.0], [48.0, 5340.0], [48.1, 5340.0], [48.2, 5340.0], [48.3, 5340.0], [48.4, 5447.0], [48.5, 5447.0], [48.6, 5447.0], [48.7, 5447.0], [48.8, 5515.0], [48.9, 5515.0], [49.0, 5515.0], [49.1, 5515.0], [49.2, 5649.0], [49.3, 5649.0], [49.4, 5649.0], [49.5, 5649.0], [49.6, 5797.0], [49.7, 5797.0], [49.8, 5797.0], [49.9, 5797.0], [50.0, 5799.0], [50.1, 5799.0], [50.2, 5799.0], [50.3, 5799.0], [50.4, 5846.0], [50.5, 5846.0], [50.6, 5846.0], [50.7, 5846.0], [50.8, 5849.0], [50.9, 5849.0], [51.0, 5849.0], [51.1, 5849.0], [51.2, 5989.0], [51.3, 5989.0], [51.4, 5989.0], [51.5, 5989.0], [51.6, 6046.0], [51.7, 6046.0], [51.8, 6046.0], [51.9, 6046.0], [52.0, 6078.0], [52.1, 6078.0], [52.2, 6078.0], [52.3, 6078.0], [52.4, 6083.0], [52.5, 6083.0], [52.6, 6083.0], [52.7, 6083.0], [52.8, 6111.0], [52.9, 6111.0], [53.0, 6111.0], [53.1, 6111.0], [53.2, 6174.0], [53.3, 6174.0], [53.4, 6174.0], [53.5, 6174.0], [53.6, 6178.0], [53.7, 6178.0], [53.8, 6178.0], [53.9, 6178.0], [54.0, 6321.0], [54.1, 6321.0], [54.2, 6321.0], [54.3, 6321.0], [54.4, 6352.0], [54.5, 6352.0], [54.6, 6352.0], [54.7, 6352.0], [54.8, 6416.0], [54.9, 6416.0], [55.0, 6416.0], [55.1, 6416.0], [55.2, 6479.0], [55.3, 6479.0], [55.4, 6479.0], [55.5, 6479.0], [55.6, 6512.0], [55.7, 6512.0], [55.8, 6512.0], [55.9, 6512.0], [56.0, 6593.0], [56.1, 6593.0], [56.2, 6593.0], [56.3, 6593.0], [56.4, 6789.0], [56.5, 6789.0], [56.6, 6789.0], [56.7, 6789.0], [56.8, 6971.0], [56.9, 6971.0], [57.0, 6971.0], [57.1, 6971.0], [57.2, 6994.0], [57.3, 6994.0], [57.4, 6994.0], [57.5, 6994.0], [57.6, 7133.0], [57.7, 7133.0], [57.8, 7133.0], [57.9, 7133.0], [58.0, 7304.0], [58.1, 7304.0], [58.2, 7304.0], [58.3, 7304.0], [58.4, 7496.0], [58.5, 7496.0], [58.6, 7496.0], [58.7, 7496.0], [58.8, 7531.0], [58.9, 7531.0], [59.0, 7531.0], [59.1, 7531.0], [59.2, 7612.0], [59.3, 7612.0], [59.4, 7612.0], [59.5, 7612.0], [59.6, 8006.0], [59.7, 8006.0], [59.8, 8006.0], [59.9, 8006.0], [60.0, 8062.0], [60.1, 8062.0], [60.2, 8062.0], [60.3, 8062.0], [60.4, 8207.0], [60.5, 8207.0], [60.6, 8207.0], [60.7, 8207.0], [60.8, 8341.0], [60.9, 8341.0], [61.0, 8341.0], [61.1, 8341.0], [61.2, 8372.0], [61.3, 8372.0], [61.4, 8372.0], [61.5, 8372.0], [61.6, 9025.0], [61.7, 9025.0], [61.8, 9025.0], [61.9, 9025.0], [62.0, 9378.0], [62.1, 9378.0], [62.2, 9378.0], [62.3, 9378.0], [62.4, 9384.0], [62.5, 9384.0], [62.6, 9384.0], [62.7, 9384.0], [62.8, 9596.0], [62.9, 9596.0], [63.0, 9596.0], [63.1, 9596.0], [63.2, 9981.0], [63.3, 9981.0], [63.4, 9981.0], [63.5, 9981.0], [63.6, 10107.0], [63.7, 10107.0], [63.8, 10107.0], [63.9, 10107.0], [64.0, 10493.0], [64.1, 10493.0], [64.2, 10493.0], [64.3, 10493.0], [64.4, 10886.0], [64.5, 10886.0], [64.6, 10886.0], [64.7, 10886.0], [64.8, 10912.0], [64.9, 10912.0], [65.0, 10912.0], [65.1, 10912.0], [65.2, 10991.0], [65.3, 10991.0], [65.4, 10991.0], [65.5, 10991.0], [65.6, 11181.0], [65.7, 11181.0], [65.8, 11181.0], [65.9, 11181.0], [66.0, 11493.0], [66.1, 11493.0], [66.2, 11493.0], [66.3, 11493.0], [66.4, 11508.0], [66.5, 11508.0], [66.6, 11508.0], [66.7, 11508.0], [66.8, 11639.0], [66.9, 11639.0], [67.0, 11639.0], [67.1, 11639.0], [67.2, 11679.0], [67.3, 11679.0], [67.4, 11679.0], [67.5, 11679.0], [67.6, 11712.0], [67.7, 11712.0], [67.8, 11712.0], [67.9, 11712.0], [68.0, 11829.0], [68.1, 11829.0], [68.2, 11829.0], [68.3, 11829.0], [68.4, 11851.0], [68.5, 11851.0], [68.6, 11851.0], [68.7, 11851.0], [68.8, 11910.0], [68.9, 11910.0], [69.0, 11910.0], [69.1, 11910.0], [69.2, 12249.0], [69.3, 12249.0], [69.4, 12249.0], [69.5, 12249.0], [69.6, 12412.0], [69.7, 12412.0], [69.8, 12412.0], [69.9, 12412.0], [70.0, 12707.0], [70.1, 12707.0], [70.2, 12707.0], [70.3, 12707.0], [70.4, 13032.0], [70.5, 13032.0], [70.6, 13032.0], [70.7, 13032.0], [70.8, 13401.0], [70.9, 13401.0], [71.0, 13401.0], [71.1, 13401.0], [71.2, 13509.0], [71.3, 13509.0], [71.4, 13509.0], [71.5, 13509.0], [71.6, 13850.0], [71.7, 13850.0], [71.8, 13850.0], [71.9, 13850.0], [72.0, 13977.0], [72.1, 13977.0], [72.2, 13977.0], [72.3, 13977.0], [72.4, 14320.0], [72.5, 14320.0], [72.6, 14320.0], [72.7, 14320.0], [72.8, 14350.0], [72.9, 14350.0], [73.0, 14350.0], [73.1, 14350.0], [73.2, 14595.0], [73.3, 14595.0], [73.4, 14595.0], [73.5, 14595.0], [73.6, 15924.0], [73.7, 15924.0], [73.8, 15924.0], [73.9, 15924.0], [74.0, 16374.0], [74.1, 16374.0], [74.2, 16374.0], [74.3, 16374.0], [74.4, 16584.0], [74.5, 16584.0], [74.6, 16584.0], [74.7, 16584.0], [74.8, 16610.0], [74.9, 16610.0], [75.0, 16610.0], [75.1, 16610.0], [75.2, 16722.0], [75.3, 16722.0], [75.4, 16722.0], [75.5, 16722.0], [75.6, 16722.0], [75.7, 17557.0], [75.8, 17557.0], [75.9, 17557.0], [76.0, 17557.0], [76.1, 18522.0], [76.2, 18522.0], [76.3, 18522.0], [76.4, 18522.0], [76.5, 18863.0], [76.6, 18863.0], [76.7, 18863.0], [76.8, 18863.0], [76.9, 18908.0], [77.0, 18908.0], [77.1, 18908.0], [77.2, 18908.0], [77.3, 18949.0], [77.4, 18949.0], [77.5, 18949.0], [77.6, 18949.0], [77.7, 19139.0], [77.8, 19139.0], [77.9, 19139.0], [78.0, 19139.0], [78.1, 19589.0], [78.2, 19589.0], [78.3, 19589.0], [78.4, 19589.0], [78.5, 19698.0], [78.6, 19698.0], [78.7, 19698.0], [78.8, 19698.0], [78.9, 19702.0], [79.0, 19702.0], [79.1, 19702.0], [79.2, 19702.0], [79.3, 19704.0], [79.4, 19704.0], [79.5, 19704.0], [79.6, 19704.0], [79.7, 19705.0], [79.8, 19705.0], [79.9, 19705.0], [80.0, 19705.0], [80.1, 19710.0], [80.2, 19710.0], [80.3, 19710.0], [80.4, 19710.0], [80.5, 19752.0], [80.6, 19752.0], [80.7, 19752.0], [80.8, 19752.0], [80.9, 19756.0], [81.0, 19756.0], [81.1, 19756.0], [81.2, 19756.0], [81.3, 19778.0], [81.4, 19778.0], [81.5, 19778.0], [81.6, 19778.0], [81.7, 19781.0], [81.8, 19781.0], [81.9, 19781.0], [82.0, 19781.0], [82.1, 19781.0], [82.2, 19781.0], [82.3, 19781.0], [82.4, 19781.0], [82.5, 19783.0], [82.6, 19783.0], [82.7, 19783.0], [82.8, 19783.0], [82.9, 19791.0], [83.0, 19791.0], [83.1, 19791.0], [83.2, 19791.0], [83.3, 19851.0], [83.4, 19851.0], [83.5, 19851.0], [83.6, 19851.0], [83.7, 19855.0], [83.8, 19855.0], [83.9, 19855.0], [84.0, 19855.0], [84.1, 19863.0], [84.2, 19863.0], [84.3, 19863.0], [84.4, 19863.0], [84.5, 19867.0], [84.6, 19867.0], [84.7, 19867.0], [84.8, 19867.0], [84.9, 19872.0], [85.0, 19872.0], [85.1, 19872.0], [85.2, 19872.0], [85.3, 19879.0], [85.4, 19879.0], [85.5, 19879.0], [85.6, 19879.0], [85.7, 19946.0], [85.8, 19946.0], [85.9, 19946.0], [86.0, 19946.0], [86.1, 19965.0], [86.2, 19965.0], [86.3, 19965.0], [86.4, 19965.0], [86.5, 19979.0], [86.6, 19979.0], [86.7, 19979.0], [86.8, 19979.0], [86.9, 19992.0], [87.0, 19992.0], [87.1, 19992.0], [87.2, 19992.0], [87.3, 20044.0], [87.4, 20044.0], [87.5, 20044.0], [87.6, 20044.0], [87.7, 20055.0], [87.8, 20055.0], [87.9, 20055.0], [88.0, 20055.0], [88.1, 20321.0], [88.2, 20321.0], [88.3, 20321.0], [88.4, 20321.0], [88.5, 20584.0], [88.6, 20584.0], [88.7, 20584.0], [88.8, 20584.0], [88.9, 20640.0], [89.0, 20640.0], [89.1, 20640.0], [89.2, 20640.0], [89.3, 20798.0], [89.4, 20798.0], [89.5, 20798.0], [89.6, 20798.0], [89.7, 21023.0], [89.8, 21023.0], [89.9, 21023.0], [90.0, 21023.0], [90.1, 21029.0], [90.2, 21029.0], [90.3, 21029.0], [90.4, 21029.0], [90.5, 21045.0], [90.6, 21045.0], [90.7, 21045.0], [90.8, 21045.0], [90.9, 21052.0], [91.0, 21052.0], [91.1, 21052.0], [91.2, 21052.0], [91.3, 22612.0], [91.4, 22612.0], [91.5, 22612.0], [91.6, 22612.0], [91.7, 23162.0], [91.8, 23162.0], [91.9, 23162.0], [92.0, 23162.0], [92.1, 25305.0], [92.2, 25305.0], [92.3, 25305.0], [92.4, 25305.0], [92.5, 25907.0], [92.6, 25907.0], [92.7, 25907.0], [92.8, 25907.0], [92.9, 27030.0], [93.0, 27030.0], [93.1, 27030.0], [93.2, 27030.0], [93.3, 27059.0], [93.4, 27059.0], [93.5, 27059.0], [93.6, 27059.0], [93.7, 29458.0], [93.8, 29458.0], [93.9, 29458.0], [94.0, 29458.0], [94.1, 29678.0], [94.2, 29678.0], [94.3, 29678.0], [94.4, 29678.0], [94.5, 29801.0], [94.6, 29801.0], [94.7, 29801.0], [94.8, 29801.0], [94.9, 29914.0], [95.0, 29914.0], [95.1, 29914.0], [95.2, 29914.0], [95.3, 30057.0], [95.4, 30057.0], [95.5, 30057.0], [95.6, 30057.0], [95.7, 30270.0], [95.8, 30270.0], [95.9, 30270.0], [96.0, 30270.0], [96.1, 30558.0], [96.2, 30558.0], [96.3, 30558.0], [96.4, 30558.0], [96.5, 30568.0], [96.6, 30568.0], [96.7, 30568.0], [96.8, 30568.0], [96.9, 34853.0], [97.0, 34853.0], [97.1, 34853.0], [97.2, 34853.0], [97.3, 34863.0], [97.4, 34863.0], [97.5, 34863.0], [97.6, 34863.0], [97.7, 36134.0], [97.8, 36134.0], [97.9, 36134.0], [98.0, 36134.0], [98.1, 37715.0], [98.2, 37715.0], [98.3, 37715.0], [98.4, 37715.0], [98.5, 38784.0], [98.6, 38784.0], [98.7, 38784.0], [98.8, 38784.0], [98.9, 39677.0], [99.0, 39677.0], [99.1, 39677.0], [99.2, 39677.0], [99.3, 42257.0], [99.4, 42257.0], [99.5, 42257.0], [99.6, 42257.0], [99.7, 43191.0], [99.8, 43191.0], [99.9, 43191.0], [100.0, 43191.0]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[0.0, 191.0], [0.1, 191.0], [0.2, 191.0], [0.3, 191.0], [0.4, 195.0], [0.5, 195.0], [0.6, 195.0], [0.7, 195.0], [0.8, 196.0], [0.9, 196.0], [1.0, 196.0], [1.1, 196.0], [1.2, 196.0], [1.3, 197.0], [1.4, 197.0], [1.5, 197.0], [1.6, 198.0], [1.7, 198.0], [1.8, 198.0], [1.9, 198.0], [2.0, 204.0], [2.1, 204.0], [2.2, 204.0], [2.3, 204.0], [2.4, 208.0], [2.5, 208.0], [2.6, 208.0], [2.7, 208.0], [2.8, 209.0], [2.9, 209.0], [3.0, 209.0], [3.1, 209.0], [3.2, 211.0], [3.3, 211.0], [3.4, 211.0], [3.5, 211.0], [3.6, 215.0], [3.7, 215.0], [3.8, 215.0], [3.9, 215.0], [4.0, 225.0], [4.1, 225.0], [4.2, 225.0], [4.3, 225.0], [4.4, 229.0], [4.5, 229.0], [4.6, 229.0], [4.7, 229.0], [4.8, 235.0], [4.9, 235.0], [5.0, 235.0], [5.1, 235.0], [5.2, 242.0], [5.3, 242.0], [5.4, 242.0], [5.5, 242.0], [5.6, 242.0], [5.7, 246.0], [5.8, 246.0], [5.9, 246.0], [6.0, 246.0], [6.1, 282.0], [6.2, 282.0], [6.3, 282.0], [6.4, 282.0], [6.5, 294.0], [6.6, 294.0], [6.7, 294.0], [6.8, 294.0], [6.9, 298.0], [7.0, 298.0], [7.1, 298.0], [7.2, 298.0], [7.3, 304.0], [7.4, 304.0], [7.5, 304.0], [7.6, 304.0], [7.7, 305.0], [7.8, 305.0], [7.9, 305.0], [8.0, 305.0], [8.1, 305.0], [8.2, 305.0], [8.3, 305.0], [8.4, 305.0], [8.5, 308.0], [8.6, 308.0], [8.7, 308.0], [8.8, 308.0], [8.9, 308.0], [9.0, 308.0], [9.1, 308.0], [9.2, 308.0], [9.3, 312.0], [9.4, 312.0], [9.5, 312.0], [9.6, 312.0], [9.7, 320.0], [9.8, 320.0], [9.9, 320.0], [10.0, 320.0], [10.1, 322.0], [10.2, 322.0], [10.3, 322.0], [10.4, 322.0], [10.5, 330.0], [10.6, 330.0], [10.7, 330.0], [10.8, 330.0], [10.9, 337.0], [11.0, 337.0], [11.1, 337.0], [11.2, 337.0], [11.3, 355.0], [11.4, 355.0], [11.5, 355.0], [11.6, 355.0], [11.7, 360.0], [11.8, 360.0], [11.9, 360.0], [12.0, 360.0], [12.1, 389.0], [12.2, 389.0], [12.3, 389.0], [12.4, 389.0], [12.5, 535.0], [12.6, 535.0], [12.7, 535.0], [12.8, 535.0], [12.9, 609.0], [13.0, 609.0], [13.1, 609.0], [13.2, 609.0], [13.3, 656.0], [13.4, 656.0], [13.5, 656.0], [13.6, 656.0], [13.7, 661.0], [13.8, 661.0], [13.9, 661.0], [14.0, 661.0], [14.1, 677.0], [14.2, 677.0], [14.3, 677.0], [14.4, 677.0], [14.5, 681.0], [14.6, 681.0], [14.7, 681.0], [14.8, 681.0], [14.9, 684.0], [15.0, 684.0], [15.1, 684.0], [15.2, 684.0], [15.3, 694.0], [15.4, 694.0], [15.5, 694.0], [15.6, 694.0], [15.7, 703.0], [15.8, 703.0], [15.9, 703.0], [16.0, 703.0], [16.1, 722.0], [16.2, 722.0], [16.3, 722.0], [16.4, 722.0], [16.5, 780.0], [16.6, 780.0], [16.7, 780.0], [16.8, 780.0], [16.9, 789.0], [17.0, 789.0], [17.1, 789.0], [17.2, 789.0], [17.3, 791.0], [17.4, 791.0], [17.5, 791.0], [17.6, 795.0], [17.7, 795.0], [17.8, 795.0], [17.9, 795.0], [18.0, 800.0], [18.1, 800.0], [18.2, 800.0], [18.3, 800.0], [18.4, 817.0], [18.5, 817.0], [18.6, 817.0], [18.7, 817.0], [18.8, 825.0], [18.9, 825.0], [19.0, 825.0], [19.1, 825.0], [19.2, 830.0], [19.3, 830.0], [19.4, 830.0], [19.5, 830.0], [19.6, 838.0], [19.7, 838.0], [19.8, 838.0], [19.9, 838.0], [20.0, 846.0], [20.1, 846.0], [20.2, 846.0], [20.3, 846.0], [20.4, 853.0], [20.5, 853.0], [20.6, 853.0], [20.7, 853.0], [20.8, 857.0], [20.9, 857.0], [21.0, 857.0], [21.1, 857.0], [21.2, 858.0], [21.3, 858.0], [21.4, 858.0], [21.5, 858.0], [21.6, 866.0], [21.7, 866.0], [21.8, 866.0], [21.9, 866.0], [22.0, 874.0], [22.1, 874.0], [22.2, 874.0], [22.3, 874.0], [22.4, 882.0], [22.5, 882.0], [22.6, 882.0], [22.7, 882.0], [22.8, 884.0], [22.9, 884.0], [23.0, 884.0], [23.1, 884.0], [23.2, 884.0], [23.3, 884.0], [23.4, 884.0], [23.5, 884.0], [23.6, 888.0], [23.7, 888.0], [23.8, 888.0], [23.9, 888.0], [24.0, 900.0], [24.1, 900.0], [24.2, 900.0], [24.3, 900.0], [24.4, 902.0], [24.5, 902.0], [24.6, 902.0], [24.7, 902.0], [24.8, 911.0], [24.9, 911.0], [25.0, 911.0], [25.1, 911.0], [25.2, 911.0], [25.3, 911.0], [25.4, 911.0], [25.5, 911.0], [25.6, 911.0], [25.7, 911.0], [25.8, 911.0], [25.9, 911.0], [26.0, 913.0], [26.1, 913.0], [26.2, 913.0], [26.3, 913.0], [26.4, 916.0], [26.5, 916.0], [26.6, 916.0], [26.7, 916.0], [26.8, 917.0], [26.9, 917.0], [27.0, 917.0], [27.1, 917.0], [27.2, 922.0], [27.3, 922.0], [27.4, 922.0], [27.5, 922.0], [27.6, 924.0], [27.7, 924.0], [27.8, 924.0], [27.9, 924.0], [28.0, 929.0], [28.1, 929.0], [28.2, 929.0], [28.3, 929.0], [28.4, 930.0], [28.5, 930.0], [28.6, 930.0], [28.7, 930.0], [28.8, 933.0], [28.9, 933.0], [29.0, 933.0], [29.1, 933.0], [29.2, 936.0], [29.3, 936.0], [29.4, 936.0], [29.5, 936.0], [29.6, 943.0], [29.7, 943.0], [29.8, 943.0], [29.9, 943.0], [30.0, 949.0], [30.1, 949.0], [30.2, 949.0], [30.3, 949.0], [30.4, 960.0], [30.5, 960.0], [30.6, 960.0], [30.7, 960.0], [30.8, 962.0], [30.9, 962.0], [31.0, 962.0], [31.1, 962.0], [31.2, 963.0], [31.3, 963.0], [31.4, 963.0], [31.5, 963.0], [31.6, 966.0], [31.7, 966.0], [31.8, 966.0], [31.9, 966.0], [32.0, 969.0], [32.1, 969.0], [32.2, 969.0], [32.3, 969.0], [32.4, 971.0], [32.5, 971.0], [32.6, 971.0], [32.7, 971.0], [32.8, 985.0], [32.9, 985.0], [33.0, 985.0], [33.1, 985.0], [33.2, 987.0], [33.3, 987.0], [33.4, 987.0], [33.5, 987.0], [33.6, 1004.0], [33.7, 1004.0], [33.8, 1004.0], [33.9, 1004.0], [34.0, 1004.0], [34.1, 1004.0], [34.2, 1004.0], [34.3, 1004.0], [34.4, 1007.0], [34.5, 1007.0], [34.6, 1007.0], [34.7, 1007.0], [34.8, 1014.0], [34.9, 1014.0], [35.0, 1014.0], [35.1, 1014.0], [35.2, 1019.0], [35.3, 1019.0], [35.4, 1019.0], [35.5, 1019.0], [35.6, 1023.0], [35.7, 1023.0], [35.8, 1023.0], [35.9, 1023.0], [36.0, 1030.0], [36.1, 1030.0], [36.2, 1030.0], [36.3, 1030.0], [36.4, 1032.0], [36.5, 1032.0], [36.6, 1032.0], [36.7, 1032.0], [36.8, 1037.0], [36.9, 1037.0], [37.0, 1037.0], [37.1, 1037.0], [37.2, 1045.0], [37.3, 1045.0], [37.4, 1045.0], [37.5, 1045.0], [37.6, 1047.0], [37.7, 1047.0], [37.8, 1047.0], [37.9, 1047.0], [38.0, 1048.0], [38.1, 1048.0], [38.2, 1048.0], [38.3, 1048.0], [38.4, 1052.0], [38.5, 1052.0], [38.6, 1052.0], [38.7, 1052.0], [38.8, 1059.0], [38.9, 1059.0], [39.0, 1059.0], [39.1, 1059.0], [39.2, 1072.0], [39.3, 1072.0], [39.4, 1072.0], [39.5, 1072.0], [39.6, 1075.0], [39.7, 1075.0], [39.8, 1075.0], [39.9, 1075.0], [40.0, 1076.0], [40.1, 1076.0], [40.2, 1076.0], [40.3, 1076.0], [40.4, 1084.0], [40.5, 1084.0], [40.6, 1084.0], [40.7, 1084.0], [40.8, 1090.0], [40.9, 1090.0], [41.0, 1090.0], [41.1, 1090.0], [41.2, 1091.0], [41.3, 1091.0], [41.4, 1091.0], [41.5, 1091.0], [41.6, 1093.0], [41.7, 1093.0], [41.8, 1093.0], [41.9, 1093.0], [42.0, 1100.0], [42.1, 1100.0], [42.2, 1100.0], [42.3, 1100.0], [42.4, 1101.0], [42.5, 1101.0], [42.6, 1101.0], [42.7, 1101.0], [42.8, 1105.0], [42.9, 1105.0], [43.0, 1105.0], [43.1, 1105.0], [43.2, 1107.0], [43.3, 1107.0], [43.4, 1107.0], [43.5, 1107.0], [43.6, 1111.0], [43.7, 1111.0], [43.8, 1111.0], [43.9, 1111.0], [44.0, 1112.0], [44.1, 1112.0], [44.2, 1112.0], [44.3, 1112.0], [44.4, 1114.0], [44.5, 1114.0], [44.6, 1114.0], [44.7, 1114.0], [44.8, 1114.0], [44.9, 1114.0], [45.0, 1114.0], [45.1, 1114.0], [45.2, 1118.0], [45.3, 1118.0], [45.4, 1118.0], [45.5, 1118.0], [45.6, 1122.0], [45.7, 1122.0], [45.8, 1122.0], [45.9, 1122.0], [46.0, 1128.0], [46.1, 1128.0], [46.2, 1128.0], [46.3, 1128.0], [46.4, 1134.0], [46.5, 1134.0], [46.6, 1134.0], [46.7, 1134.0], [46.8, 1135.0], [46.9, 1135.0], [47.0, 1135.0], [47.1, 1135.0], [47.2, 1172.0], [47.3, 1172.0], [47.4, 1172.0], [47.5, 1172.0], [47.6, 1180.0], [47.7, 1180.0], [47.8, 1180.0], [47.9, 1180.0], [48.0, 1184.0], [48.1, 1184.0], [48.2, 1184.0], [48.3, 1184.0], [48.4, 1186.0], [48.5, 1186.0], [48.6, 1186.0], [48.7, 1186.0], [48.8, 1187.0], [48.9, 1187.0], [49.0, 1187.0], [49.1, 1187.0], [49.2, 1194.0], [49.3, 1194.0], [49.4, 1194.0], [49.5, 1194.0], [49.6, 1196.0], [49.7, 1196.0], [49.8, 1196.0], [49.9, 1196.0], [50.0, 1198.0], [50.1, 1198.0], [50.2, 1198.0], [50.3, 1198.0], [50.4, 1205.0], [50.5, 1205.0], [50.6, 1205.0], [50.7, 1205.0], [50.8, 1207.0], [50.9, 1207.0], [51.0, 1207.0], [51.1, 1207.0], [51.2, 1213.0], [51.3, 1213.0], [51.4, 1213.0], [51.5, 1213.0], [51.6, 1215.0], [51.7, 1215.0], [51.8, 1215.0], [51.9, 1215.0], [52.0, 1235.0], [52.1, 1235.0], [52.2, 1235.0], [52.3, 1235.0], [52.4, 1249.0], [52.5, 1249.0], [52.6, 1249.0], [52.7, 1249.0], [52.8, 1251.0], [52.9, 1251.0], [53.0, 1251.0], [53.1, 1251.0], [53.2, 1254.0], [53.3, 1254.0], [53.4, 1254.0], [53.5, 1254.0], [53.6, 1255.0], [53.7, 1255.0], [53.8, 1255.0], [53.9, 1255.0], [54.0, 1262.0], [54.1, 1262.0], [54.2, 1262.0], [54.3, 1262.0], [54.4, 1282.0], [54.5, 1282.0], [54.6, 1282.0], [54.7, 1282.0], [54.8, 1305.0], [54.9, 1305.0], [55.0, 1305.0], [55.1, 1305.0], [55.2, 1309.0], [55.3, 1309.0], [55.4, 1309.0], [55.5, 1309.0], [55.6, 1317.0], [55.7, 1317.0], [55.8, 1317.0], [55.9, 1317.0], [56.0, 1327.0], [56.1, 1327.0], [56.2, 1327.0], [56.3, 1327.0], [56.4, 1339.0], [56.5, 1339.0], [56.6, 1339.0], [56.7, 1339.0], [56.8, 1359.0], [56.9, 1359.0], [57.0, 1359.0], [57.1, 1359.0], [57.2, 1360.0], [57.3, 1360.0], [57.4, 1360.0], [57.5, 1360.0], [57.6, 1393.0], [57.7, 1393.0], [57.8, 1393.0], [57.9, 1393.0], [58.0, 1453.0], [58.1, 1453.0], [58.2, 1453.0], [58.3, 1453.0], [58.4, 1497.0], [58.5, 1497.0], [58.6, 1497.0], [58.7, 1497.0], [58.8, 1516.0], [58.9, 1516.0], [59.0, 1516.0], [59.1, 1516.0], [59.2, 1530.0], [59.3, 1530.0], [59.4, 1530.0], [59.5, 1530.0], [59.6, 1537.0], [59.7, 1537.0], [59.8, 1537.0], [59.9, 1537.0], [60.0, 1555.0], [60.1, 1555.0], [60.2, 1555.0], [60.3, 1555.0], [60.4, 1591.0], [60.5, 1591.0], [60.6, 1591.0], [60.7, 1591.0], [60.8, 1622.0], [60.9, 1622.0], [61.0, 1622.0], [61.1, 1622.0], [61.2, 1638.0], [61.3, 1638.0], [61.4, 1638.0], [61.5, 1638.0], [61.6, 1656.0], [61.7, 1656.0], [61.8, 1656.0], [61.9, 1656.0], [62.0, 1660.0], [62.1, 1660.0], [62.2, 1660.0], [62.3, 1660.0], [62.4, 1699.0], [62.5, 1699.0], [62.6, 1699.0], [62.7, 1699.0], [62.8, 1708.0], [62.9, 1708.0], [63.0, 1708.0], [63.1, 1708.0], [63.2, 1758.0], [63.3, 1758.0], [63.4, 1758.0], [63.5, 1758.0], [63.6, 1767.0], [63.7, 1767.0], [63.8, 1767.0], [63.9, 1767.0], [64.0, 1799.0], [64.1, 1799.0], [64.2, 1799.0], [64.3, 1799.0], [64.4, 1805.0], [64.5, 1805.0], [64.6, 1805.0], [64.7, 1805.0], [64.8, 1825.0], [64.9, 1825.0], [65.0, 1825.0], [65.1, 1825.0], [65.2, 1839.0], [65.3, 1839.0], [65.4, 1839.0], [65.5, 1839.0], [65.6, 1854.0], [65.7, 1854.0], [65.8, 1854.0], [65.9, 1854.0], [66.0, 1922.0], [66.1, 1922.0], [66.2, 1922.0], [66.3, 1922.0], [66.4, 1923.0], [66.5, 1923.0], [66.6, 1923.0], [66.7, 1923.0], [66.8, 1947.0], [66.9, 1947.0], [67.0, 1947.0], [67.1, 1947.0], [67.2, 1948.0], [67.3, 1948.0], [67.4, 1948.0], [67.5, 1948.0], [67.6, 1954.0], [67.7, 1954.0], [67.8, 1954.0], [67.9, 1954.0], [68.0, 1992.0], [68.1, 1992.0], [68.2, 1992.0], [68.3, 1992.0], [68.4, 2018.0], [68.5, 2018.0], [68.6, 2018.0], [68.7, 2018.0], [68.8, 2067.0], [68.9, 2067.0], [69.0, 2067.0], [69.1, 2067.0], [69.2, 2099.0], [69.3, 2099.0], [69.4, 2099.0], [69.5, 2099.0], [69.6, 2101.0], [69.7, 2101.0], [69.8, 2101.0], [69.9, 2101.0], [70.0, 2103.0], [70.1, 2103.0], [70.2, 2103.0], [70.3, 2103.0], [70.4, 2128.0], [70.5, 2128.0], [70.6, 2128.0], [70.7, 2128.0], [70.8, 2153.0], [70.9, 2153.0], [71.0, 2153.0], [71.1, 2153.0], [71.2, 2197.0], [71.3, 2197.0], [71.4, 2197.0], [71.5, 2197.0], [71.6, 2204.0], [71.7, 2204.0], [71.8, 2204.0], [71.9, 2204.0], [72.0, 2272.0], [72.1, 2272.0], [72.2, 2272.0], [72.3, 2272.0], [72.4, 2296.0], [72.5, 2296.0], [72.6, 2296.0], [72.7, 2296.0], [72.8, 2302.0], [72.9, 2302.0], [73.0, 2302.0], [73.1, 2302.0], [73.2, 2306.0], [73.3, 2306.0], [73.4, 2306.0], [73.5, 2306.0], [73.6, 2330.0], [73.7, 2330.0], [73.8, 2330.0], [73.9, 2330.0], [74.0, 2331.0], [74.1, 2331.0], [74.2, 2331.0], [74.3, 2331.0], [74.4, 2390.0], [74.5, 2390.0], [74.6, 2390.0], [74.7, 2390.0], [74.8, 2411.0], [74.9, 2411.0], [75.0, 2411.0], [75.1, 2411.0], [75.2, 2429.0], [75.3, 2429.0], [75.4, 2429.0], [75.5, 2429.0], [75.6, 2429.0], [75.7, 2477.0], [75.8, 2477.0], [75.9, 2477.0], [76.0, 2477.0], [76.1, 2489.0], [76.2, 2489.0], [76.3, 2489.0], [76.4, 2489.0], [76.5, 2524.0], [76.6, 2524.0], [76.7, 2524.0], [76.8, 2524.0], [76.9, 2533.0], [77.0, 2533.0], [77.1, 2533.0], [77.2, 2533.0], [77.3, 2556.0], [77.4, 2556.0], [77.5, 2556.0], [77.6, 2556.0], [77.7, 2579.0], [77.8, 2579.0], [77.9, 2579.0], [78.0, 2579.0], [78.1, 2609.0], [78.2, 2609.0], [78.3, 2609.0], [78.4, 2609.0], [78.5, 2618.0], [78.6, 2618.0], [78.7, 2618.0], [78.8, 2618.0], [78.9, 2625.0], [79.0, 2625.0], [79.1, 2625.0], [79.2, 2625.0], [79.3, 2639.0], [79.4, 2639.0], [79.5, 2639.0], [79.6, 2639.0], [79.7, 2680.0], [79.8, 2680.0], [79.9, 2680.0], [80.0, 2680.0], [80.1, 2779.0], [80.2, 2779.0], [80.3, 2779.0], [80.4, 2779.0], [80.5, 2798.0], [80.6, 2798.0], [80.7, 2798.0], [80.8, 2798.0], [80.9, 2804.0], [81.0, 2804.0], [81.1, 2804.0], [81.2, 2804.0], [81.3, 2825.0], [81.4, 2825.0], [81.5, 2825.0], [81.6, 2825.0], [81.7, 2869.0], [81.8, 2869.0], [81.9, 2869.0], [82.0, 2869.0], [82.1, 3134.0], [82.2, 3134.0], [82.3, 3134.0], [82.4, 3134.0], [82.5, 3173.0], [82.6, 3173.0], [82.7, 3173.0], [82.8, 3173.0], [82.9, 3262.0], [83.0, 3262.0], [83.1, 3262.0], [83.2, 3262.0], [83.3, 3284.0], [83.4, 3284.0], [83.5, 3284.0], [83.6, 3284.0], [83.7, 3319.0], [83.8, 3319.0], [83.9, 3319.0], [84.0, 3319.0], [84.1, 3328.0], [84.2, 3328.0], [84.3, 3328.0], [84.4, 3328.0], [84.5, 3381.0], [84.6, 3381.0], [84.7, 3381.0], [84.8, 3381.0], [84.9, 3385.0], [85.0, 3385.0], [85.1, 3385.0], [85.2, 3385.0], [85.3, 3442.0], [85.4, 3442.0], [85.5, 3442.0], [85.6, 3442.0], [85.7, 3569.0], [85.8, 3569.0], [85.9, 3569.0], [86.0, 3569.0], [86.1, 3577.0], [86.2, 3577.0], [86.3, 3577.0], [86.4, 3577.0], [86.5, 3729.0], [86.6, 3729.0], [86.7, 3729.0], [86.8, 3729.0], [86.9, 3894.0], [87.0, 3894.0], [87.1, 3894.0], [87.2, 3894.0], [87.3, 3914.0], [87.4, 3914.0], [87.5, 3914.0], [87.6, 3914.0], [87.7, 3937.0], [87.8, 3937.0], [87.9, 3937.0], [88.0, 3937.0], [88.1, 3955.0], [88.2, 3955.0], [88.3, 3955.0], [88.4, 3955.0], [88.5, 4028.0], [88.6, 4028.0], [88.7, 4028.0], [88.8, 4028.0], [88.9, 4079.0], [89.0, 4079.0], [89.1, 4079.0], [89.2, 4079.0], [89.3, 4093.0], [89.4, 4093.0], [89.5, 4093.0], [89.6, 4093.0], [89.7, 4135.0], [89.8, 4135.0], [89.9, 4135.0], [90.0, 4135.0], [90.1, 4147.0], [90.2, 4147.0], [90.3, 4147.0], [90.4, 4147.0], [90.5, 4176.0], [90.6, 4176.0], [90.7, 4176.0], [90.8, 4176.0], [90.9, 4314.0], [91.0, 4314.0], [91.1, 4314.0], [91.2, 4314.0], [91.3, 4439.0], [91.4, 4439.0], [91.5, 4439.0], [91.6, 4439.0], [91.7, 4609.0], [91.8, 4609.0], [91.9, 4609.0], [92.0, 4609.0], [92.1, 4906.0], [92.2, 4906.0], [92.3, 4906.0], [92.4, 4906.0], [92.5, 4999.0], [92.6, 4999.0], [92.7, 4999.0], [92.8, 4999.0], [92.9, 5011.0], [93.0, 5011.0], [93.1, 5011.0], [93.2, 5011.0], [93.3, 5140.0], [93.4, 5140.0], [93.5, 5140.0], [93.6, 5140.0], [93.7, 5372.0], [93.8, 5372.0], [93.9, 5372.0], [94.0, 5372.0], [94.1, 5790.0], [94.2, 5790.0], [94.3, 5790.0], [94.4, 5790.0], [94.5, 6548.0], [94.6, 6548.0], [94.7, 6548.0], [94.8, 6548.0], [94.9, 6737.0], [95.0, 6737.0], [95.1, 6737.0], [95.2, 6737.0], [95.3, 6873.0], [95.4, 6873.0], [95.5, 6873.0], [95.6, 6873.0], [95.7, 7981.0], [95.8, 7981.0], [95.9, 7981.0], [96.0, 7981.0], [96.1, 8236.0], [96.2, 8236.0], [96.3, 8236.0], [96.4, 8236.0], [96.5, 8622.0], [96.6, 8622.0], [96.7, 8622.0], [96.8, 8622.0], [96.9, 8858.0], [97.0, 8858.0], [97.1, 8858.0], [97.2, 8858.0], [97.3, 9266.0], [97.4, 9266.0], [97.5, 9266.0], [97.6, 9266.0], [97.7, 9480.0], [97.8, 9480.0], [97.9, 9480.0], [98.0, 9480.0], [98.1, 9529.0], [98.2, 9529.0], [98.3, 9529.0], [98.4, 9529.0], [98.5, 10107.0], [98.6, 10107.0], [98.7, 10107.0], [98.8, 10107.0], [98.9, 10206.0], [99.0, 10206.0], [99.1, 10206.0], [99.2, 10206.0], [99.3, 11851.0], [99.4, 11851.0], [99.5, 11851.0], [99.6, 11851.0], [99.7, 16469.0], [99.8, 16469.0], [99.9, 16469.0], [100.0, 16469.0]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[0.0, 75.0], [0.1, 75.0], [0.2, 75.0], [0.3, 75.0], [0.4, 76.0], [0.5, 76.0], [0.6, 76.0], [0.7, 76.0], [0.8, 76.0], [0.9, 76.0], [1.0, 76.0], [1.1, 76.0], [1.2, 76.0], [1.3, 77.0], [1.4, 77.0], [1.5, 77.0], [1.6, 79.0], [1.7, 79.0], [1.8, 79.0], [1.9, 79.0], [2.0, 82.0], [2.1, 82.0], [2.2, 82.0], [2.3, 82.0], [2.4, 83.0], [2.5, 83.0], [2.6, 83.0], [2.7, 83.0], [2.8, 83.0], [2.9, 83.0], [3.0, 83.0], [3.1, 83.0], [3.2, 87.0], [3.3, 87.0], [3.4, 87.0], [3.5, 87.0], [3.6, 89.0], [3.7, 89.0], [3.8, 89.0], [3.9, 89.0], [4.0, 90.0], [4.1, 90.0], [4.2, 90.0], [4.3, 90.0], [4.4, 91.0], [4.5, 91.0], [4.6, 91.0], [4.7, 91.0], [4.8, 91.0], [4.9, 94.0], [5.0, 94.0], [5.1, 94.0], [5.2, 94.0], [5.3, 99.0], [5.4, 99.0], [5.5, 99.0], [5.6, 99.0], [5.7, 102.0], [5.8, 102.0], [5.9, 102.0], [6.0, 102.0], [6.1, 103.0], [6.2, 103.0], [6.3, 103.0], [6.4, 103.0], [6.5, 103.0], [6.6, 103.0], [6.7, 103.0], [6.8, 103.0], [6.9, 108.0], [7.0, 108.0], [7.1, 108.0], [7.2, 108.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 115.0], [7.8, 115.0], [7.9, 115.0], [8.0, 115.0], [8.1, 132.0], [8.2, 132.0], [8.3, 132.0], [8.4, 132.0], [8.5, 152.0], [8.6, 152.0], [8.7, 152.0], [8.8, 152.0], [8.9, 156.0], [9.0, 156.0], [9.1, 156.0], [9.2, 156.0], [9.3, 174.0], [9.4, 174.0], [9.5, 174.0], [9.6, 174.0], [9.7, 183.0], [9.8, 183.0], [9.9, 183.0], [10.0, 183.0], [10.1, 204.0], [10.2, 204.0], [10.3, 204.0], [10.4, 204.0], [10.5, 204.0], [10.6, 204.0], [10.7, 204.0], [10.8, 204.0], [10.9, 220.0], [11.0, 220.0], [11.1, 220.0], [11.2, 220.0], [11.3, 221.0], [11.4, 221.0], [11.5, 221.0], [11.6, 221.0], [11.7, 225.0], [11.8, 225.0], [11.9, 225.0], [12.0, 225.0], [12.1, 226.0], [12.2, 226.0], [12.3, 226.0], [12.4, 226.0], [12.5, 227.0], [12.6, 227.0], [12.7, 227.0], [12.8, 227.0], [12.9, 236.0], [13.0, 236.0], [13.1, 236.0], [13.2, 236.0], [13.3, 237.0], [13.4, 237.0], [13.5, 237.0], [13.6, 237.0], [13.7, 246.0], [13.8, 246.0], [13.9, 246.0], [14.0, 246.0], [14.1, 249.0], [14.2, 249.0], [14.3, 249.0], [14.4, 249.0], [14.5, 254.0], [14.6, 254.0], [14.7, 254.0], [14.8, 254.0], [14.9, 254.0], [15.0, 254.0], [15.1, 254.0], [15.2, 254.0], [15.3, 258.0], [15.4, 258.0], [15.5, 258.0], [15.6, 258.0], [15.7, 261.0], [15.8, 261.0], [15.9, 261.0], [16.0, 261.0], [16.1, 263.0], [16.2, 263.0], [16.3, 263.0], [16.4, 263.0], [16.5, 263.0], [16.6, 263.0], [16.7, 263.0], [16.8, 263.0], [16.9, 265.0], [17.0, 265.0], [17.1, 265.0], [17.2, 265.0], [17.3, 266.0], [17.4, 266.0], [17.5, 266.0], [17.6, 266.0], [17.7, 267.0], [17.8, 267.0], [17.9, 267.0], [18.0, 267.0], [18.1, 276.0], [18.2, 276.0], [18.3, 276.0], [18.4, 276.0], [18.5, 277.0], [18.6, 277.0], [18.7, 277.0], [18.8, 282.0], [18.9, 282.0], [19.0, 282.0], [19.1, 282.0], [19.2, 283.0], [19.3, 283.0], [19.4, 283.0], [19.5, 283.0], [19.6, 288.0], [19.7, 288.0], [19.8, 288.0], [19.9, 288.0], [20.0, 290.0], [20.1, 290.0], [20.2, 290.0], [20.3, 290.0], [20.4, 291.0], [20.5, 291.0], [20.6, 291.0], [20.7, 291.0], [20.8, 291.0], [20.9, 291.0], [21.0, 291.0], [21.1, 291.0], [21.2, 293.0], [21.3, 293.0], [21.4, 293.0], [21.5, 293.0], [21.6, 296.0], [21.7, 296.0], [21.8, 296.0], [21.9, 296.0], [22.0, 300.0], [22.1, 300.0], [22.2, 300.0], [22.3, 300.0], [22.4, 300.0], [22.5, 300.0], [22.6, 300.0], [22.7, 300.0], [22.8, 308.0], [22.9, 308.0], [23.0, 308.0], [23.1, 308.0], [23.2, 310.0], [23.3, 310.0], [23.4, 310.0], [23.5, 310.0], [23.6, 314.0], [23.7, 314.0], [23.8, 314.0], [23.9, 314.0], [24.0, 317.0], [24.1, 317.0], [24.2, 317.0], [24.3, 317.0], [24.4, 367.0], [24.5, 367.0], [24.6, 367.0], [24.7, 367.0], [24.8, 369.0], [24.9, 369.0], [25.0, 369.0], [25.1, 369.0], [25.2, 372.0], [25.3, 372.0], [25.4, 372.0], [25.5, 372.0], [25.6, 377.0], [25.7, 377.0], [25.8, 377.0], [25.9, 377.0], [26.0, 397.0], [26.1, 397.0], [26.2, 397.0], [26.3, 397.0], [26.4, 399.0], [26.5, 399.0], [26.6, 399.0], [26.7, 399.0], [26.8, 412.0], [26.9, 412.0], [27.0, 412.0], [27.1, 412.0], [27.2, 416.0], [27.3, 416.0], [27.4, 416.0], [27.5, 416.0], [27.6, 419.0], [27.7, 419.0], [27.8, 419.0], [27.9, 419.0], [28.0, 419.0], [28.1, 419.0], [28.2, 419.0], [28.3, 419.0], [28.4, 421.0], [28.5, 421.0], [28.6, 421.0], [28.7, 421.0], [28.8, 430.0], [28.9, 430.0], [29.0, 430.0], [29.1, 430.0], [29.2, 446.0], [29.3, 446.0], [29.4, 446.0], [29.5, 446.0], [29.6, 449.0], [29.7, 449.0], [29.8, 449.0], [29.9, 449.0], [30.0, 454.0], [30.1, 454.0], [30.2, 454.0], [30.3, 454.0], [30.4, 458.0], [30.5, 458.0], [30.6, 458.0], [30.7, 458.0], [30.8, 475.0], [30.9, 475.0], [31.0, 475.0], [31.1, 475.0], [31.2, 479.0], [31.3, 479.0], [31.4, 479.0], [31.5, 479.0], [31.6, 486.0], [31.7, 486.0], [31.8, 486.0], [31.9, 486.0], [32.0, 500.0], [32.1, 500.0], [32.2, 500.0], [32.3, 500.0], [32.4, 501.0], [32.5, 501.0], [32.6, 501.0], [32.7, 501.0], [32.8, 520.0], [32.9, 520.0], [33.0, 520.0], [33.1, 520.0], [33.2, 534.0], [33.3, 534.0], [33.4, 534.0], [33.5, 534.0], [33.6, 541.0], [33.7, 541.0], [33.8, 541.0], [33.9, 541.0], [34.0, 542.0], [34.1, 542.0], [34.2, 542.0], [34.3, 542.0], [34.4, 567.0], [34.5, 567.0], [34.6, 567.0], [34.7, 567.0], [34.8, 582.0], [34.9, 582.0], [35.0, 582.0], [35.1, 582.0], [35.2, 583.0], [35.3, 583.0], [35.4, 583.0], [35.5, 583.0], [35.6, 618.0], [35.7, 618.0], [35.8, 618.0], [35.9, 618.0], [36.0, 649.0], [36.1, 649.0], [36.2, 649.0], [36.3, 649.0], [36.4, 651.0], [36.5, 651.0], [36.6, 651.0], [36.7, 651.0], [36.8, 651.0], [36.9, 651.0], [37.0, 651.0], [37.1, 651.0], [37.2, 665.0], [37.3, 665.0], [37.4, 665.0], [37.5, 665.0], [37.6, 667.0], [37.7, 667.0], [37.8, 667.0], [37.9, 667.0], [38.0, 669.0], [38.1, 669.0], [38.2, 669.0], [38.3, 669.0], [38.4, 677.0], [38.5, 677.0], [38.6, 677.0], [38.7, 677.0], [38.8, 717.0], [38.9, 717.0], [39.0, 717.0], [39.1, 717.0], [39.2, 725.0], [39.3, 725.0], [39.4, 725.0], [39.5, 725.0], [39.6, 745.0], [39.7, 745.0], [39.8, 745.0], [39.9, 745.0], [40.0, 800.0], [40.1, 800.0], [40.2, 800.0], [40.3, 800.0], [40.4, 803.0], [40.5, 803.0], [40.6, 803.0], [40.7, 803.0], [40.8, 812.0], [40.9, 812.0], [41.0, 812.0], [41.1, 812.0], [41.2, 836.0], [41.3, 836.0], [41.4, 836.0], [41.5, 836.0], [41.6, 851.0], [41.7, 851.0], [41.8, 851.0], [41.9, 851.0], [42.0, 861.0], [42.1, 861.0], [42.2, 861.0], [42.3, 861.0], [42.4, 872.0], [42.5, 872.0], [42.6, 872.0], [42.7, 872.0], [42.8, 898.0], [42.9, 898.0], [43.0, 898.0], [43.1, 898.0], [43.2, 903.0], [43.3, 903.0], [43.4, 903.0], [43.5, 903.0], [43.6, 934.0], [43.7, 934.0], [43.8, 934.0], [43.9, 934.0], [44.0, 968.0], [44.1, 968.0], [44.2, 968.0], [44.3, 968.0], [44.4, 970.0], [44.5, 970.0], [44.6, 970.0], [44.7, 970.0], [44.8, 1035.0], [44.9, 1035.0], [45.0, 1035.0], [45.1, 1035.0], [45.2, 1075.0], [45.3, 1075.0], [45.4, 1075.0], [45.5, 1075.0], [45.6, 1080.0], [45.7, 1080.0], [45.8, 1080.0], [45.9, 1080.0], [46.0, 1119.0], [46.1, 1119.0], [46.2, 1119.0], [46.3, 1119.0], [46.4, 1139.0], [46.5, 1139.0], [46.6, 1139.0], [46.7, 1139.0], [46.8, 1144.0], [46.9, 1144.0], [47.0, 1144.0], [47.1, 1144.0], [47.2, 1144.0], [47.3, 1144.0], [47.4, 1144.0], [47.5, 1144.0], [47.6, 1172.0], [47.7, 1172.0], [47.8, 1172.0], [47.9, 1172.0], [48.0, 1175.0], [48.1, 1175.0], [48.2, 1175.0], [48.3, 1175.0], [48.4, 1197.0], [48.5, 1197.0], [48.6, 1197.0], [48.7, 1197.0], [48.8, 1225.0], [48.9, 1225.0], [49.0, 1225.0], [49.1, 1225.0], [49.2, 1253.0], [49.3, 1253.0], [49.4, 1253.0], [49.5, 1253.0], [49.6, 1280.0], [49.7, 1280.0], [49.8, 1280.0], [49.9, 1280.0], [50.0, 1287.0], [50.1, 1287.0], [50.2, 1287.0], [50.3, 1287.0], [50.4, 1296.0], [50.5, 1296.0], [50.6, 1296.0], [50.7, 1296.0], [50.8, 1303.0], [50.9, 1303.0], [51.0, 1303.0], [51.1, 1303.0], [51.2, 1349.0], [51.3, 1349.0], [51.4, 1349.0], [51.5, 1349.0], [51.6, 1357.0], [51.7, 1357.0], [51.8, 1357.0], [51.9, 1357.0], [52.0, 1374.0], [52.1, 1374.0], [52.2, 1374.0], [52.3, 1374.0], [52.4, 1389.0], [52.5, 1389.0], [52.6, 1389.0], [52.7, 1389.0], [52.8, 1399.0], [52.9, 1399.0], [53.0, 1399.0], [53.1, 1399.0], [53.2, 1425.0], [53.3, 1425.0], [53.4, 1425.0], [53.5, 1425.0], [53.6, 1427.0], [53.7, 1427.0], [53.8, 1427.0], [53.9, 1427.0], [54.0, 1455.0], [54.1, 1455.0], [54.2, 1455.0], [54.3, 1455.0], [54.4, 1456.0], [54.5, 1456.0], [54.6, 1456.0], [54.7, 1456.0], [54.8, 1464.0], [54.9, 1464.0], [55.0, 1464.0], [55.1, 1464.0], [55.2, 1468.0], [55.3, 1468.0], [55.4, 1468.0], [55.5, 1468.0], [55.6, 1472.0], [55.7, 1472.0], [55.8, 1472.0], [55.9, 1472.0], [56.0, 1504.0], [56.1, 1504.0], [56.2, 1504.0], [56.3, 1504.0], [56.4, 1509.0], [56.5, 1509.0], [56.6, 1509.0], [56.7, 1509.0], [56.8, 1523.0], [56.9, 1523.0], [57.0, 1523.0], [57.1, 1523.0], [57.2, 1545.0], [57.3, 1545.0], [57.4, 1545.0], [57.5, 1545.0], [57.6, 1547.0], [57.7, 1547.0], [57.8, 1547.0], [57.9, 1547.0], [58.0, 1579.0], [58.1, 1579.0], [58.2, 1579.0], [58.3, 1579.0], [58.4, 1581.0], [58.5, 1581.0], [58.6, 1581.0], [58.7, 1581.0], [58.8, 1595.0], [58.9, 1595.0], [59.0, 1595.0], [59.1, 1595.0], [59.2, 1621.0], [59.3, 1621.0], [59.4, 1621.0], [59.5, 1621.0], [59.6, 1626.0], [59.7, 1626.0], [59.8, 1626.0], [59.9, 1626.0], [60.0, 1644.0], [60.1, 1644.0], [60.2, 1644.0], [60.3, 1644.0], [60.4, 1645.0], [60.5, 1645.0], [60.6, 1645.0], [60.7, 1645.0], [60.8, 1649.0], [60.9, 1649.0], [61.0, 1649.0], [61.1, 1649.0], [61.2, 1667.0], [61.3, 1667.0], [61.4, 1667.0], [61.5, 1667.0], [61.6, 1693.0], [61.7, 1693.0], [61.8, 1693.0], [61.9, 1693.0], [62.0, 1720.0], [62.1, 1720.0], [62.2, 1720.0], [62.3, 1720.0], [62.4, 1736.0], [62.5, 1736.0], [62.6, 1736.0], [62.7, 1736.0], [62.8, 1750.0], [62.9, 1750.0], [63.0, 1750.0], [63.1, 1750.0], [63.2, 1751.0], [63.3, 1751.0], [63.4, 1751.0], [63.5, 1751.0], [63.6, 1793.0], [63.7, 1793.0], [63.8, 1793.0], [63.9, 1793.0], [64.0, 1842.0], [64.1, 1842.0], [64.2, 1842.0], [64.3, 1842.0], [64.4, 1892.0], [64.5, 1892.0], [64.6, 1892.0], [64.7, 1892.0], [64.8, 1926.0], [64.9, 1926.0], [65.0, 1926.0], [65.1, 1926.0], [65.2, 1928.0], [65.3, 1928.0], [65.4, 1928.0], [65.5, 1928.0], [65.6, 1933.0], [65.7, 1933.0], [65.8, 1933.0], [65.9, 1933.0], [66.0, 1944.0], [66.1, 1944.0], [66.2, 1944.0], [66.3, 1944.0], [66.4, 1974.0], [66.5, 1974.0], [66.6, 1974.0], [66.7, 1974.0], [66.8, 1987.0], [66.9, 1987.0], [67.0, 1987.0], [67.1, 1987.0], [67.2, 1989.0], [67.3, 1989.0], [67.4, 1989.0], [67.5, 1989.0], [67.6, 1996.0], [67.7, 1996.0], [67.8, 1996.0], [67.9, 1996.0], [68.0, 2003.0], [68.1, 2003.0], [68.2, 2003.0], [68.3, 2003.0], [68.4, 2008.0], [68.5, 2008.0], [68.6, 2008.0], [68.7, 2008.0], [68.8, 2085.0], [68.9, 2085.0], [69.0, 2085.0], [69.1, 2085.0], [69.2, 2098.0], [69.3, 2098.0], [69.4, 2098.0], [69.5, 2098.0], [69.6, 2111.0], [69.7, 2111.0], [69.8, 2111.0], [69.9, 2111.0], [70.0, 2111.0], [70.1, 2111.0], [70.2, 2111.0], [70.3, 2111.0], [70.4, 2130.0], [70.5, 2130.0], [70.6, 2130.0], [70.7, 2130.0], [70.8, 2134.0], [70.9, 2134.0], [71.0, 2134.0], [71.1, 2134.0], [71.2, 2134.0], [71.3, 2134.0], [71.4, 2134.0], [71.5, 2134.0], [71.6, 2159.0], [71.7, 2159.0], [71.8, 2159.0], [71.9, 2159.0], [72.0, 2169.0], [72.1, 2169.0], [72.2, 2169.0], [72.3, 2169.0], [72.4, 2176.0], [72.5, 2176.0], [72.6, 2176.0], [72.7, 2176.0], [72.8, 2185.0], [72.9, 2185.0], [73.0, 2185.0], [73.1, 2185.0], [73.2, 2208.0], [73.3, 2208.0], [73.4, 2208.0], [73.5, 2208.0], [73.6, 2231.0], [73.7, 2231.0], [73.8, 2231.0], [73.9, 2231.0], [74.0, 2273.0], [74.1, 2273.0], [74.2, 2273.0], [74.3, 2273.0], [74.4, 2294.0], [74.5, 2294.0], [74.6, 2294.0], [74.7, 2294.0], [74.8, 2296.0], [74.9, 2296.0], [75.0, 2296.0], [75.1, 2296.0], [75.2, 2310.0], [75.3, 2310.0], [75.4, 2310.0], [75.5, 2310.0], [75.6, 2324.0], [75.7, 2324.0], [75.8, 2324.0], [75.9, 2324.0], [76.0, 2373.0], [76.1, 2373.0], [76.2, 2373.0], [76.3, 2373.0], [76.4, 2397.0], [76.5, 2397.0], [76.6, 2397.0], [76.7, 2397.0], [76.8, 2449.0], [76.9, 2449.0], [77.0, 2449.0], [77.1, 2449.0], [77.2, 2467.0], [77.3, 2467.0], [77.4, 2467.0], [77.5, 2467.0], [77.6, 2467.0], [77.7, 2478.0], [77.8, 2478.0], [77.9, 2478.0], [78.0, 2478.0], [78.1, 2501.0], [78.2, 2501.0], [78.3, 2501.0], [78.4, 2501.0], [78.5, 2505.0], [78.6, 2505.0], [78.7, 2505.0], [78.8, 2505.0], [78.9, 2509.0], [79.0, 2509.0], [79.1, 2509.0], [79.2, 2509.0], [79.3, 2516.0], [79.4, 2516.0], [79.5, 2516.0], [79.6, 2516.0], [79.7, 2534.0], [79.8, 2534.0], [79.9, 2534.0], [80.0, 2534.0], [80.1, 2576.0], [80.2, 2576.0], [80.3, 2576.0], [80.4, 2576.0], [80.5, 2590.0], [80.6, 2590.0], [80.7, 2590.0], [80.8, 2590.0], [80.9, 2598.0], [81.0, 2598.0], [81.1, 2598.0], [81.2, 2598.0], [81.3, 2659.0], [81.4, 2659.0], [81.5, 2659.0], [81.6, 2659.0], [81.7, 2666.0], [81.8, 2666.0], [81.9, 2666.0], [82.0, 2666.0], [82.1, 2666.0], [82.2, 2666.0], [82.3, 2666.0], [82.4, 2666.0], [82.5, 2770.0], [82.6, 2770.0], [82.7, 2770.0], [82.8, 2770.0], [82.9, 2783.0], [83.0, 2783.0], [83.1, 2783.0], [83.2, 2783.0], [83.3, 2856.0], [83.4, 2856.0], [83.5, 2856.0], [83.6, 2856.0], [83.7, 2863.0], [83.8, 2863.0], [83.9, 2863.0], [84.0, 2863.0], [84.1, 2905.0], [84.2, 2905.0], [84.3, 2905.0], [84.4, 2905.0], [84.5, 2990.0], [84.6, 2990.0], [84.7, 2990.0], [84.8, 2990.0], [84.9, 3027.0], [85.0, 3027.0], [85.1, 3027.0], [85.2, 3027.0], [85.3, 3063.0], [85.4, 3063.0], [85.5, 3063.0], [85.6, 3063.0], [85.7, 3079.0], [85.8, 3079.0], [85.9, 3079.0], [86.0, 3079.0], [86.1, 3173.0], [86.2, 3173.0], [86.3, 3173.0], [86.4, 3173.0], [86.5, 3192.0], [86.6, 3192.0], [86.7, 3192.0], [86.8, 3192.0], [86.9, 3236.0], [87.0, 3236.0], [87.1, 3236.0], [87.2, 3236.0], [87.3, 3414.0], [87.4, 3414.0], [87.5, 3414.0], [87.6, 3414.0], [87.7, 3457.0], [87.8, 3457.0], [87.9, 3457.0], [88.0, 3457.0], [88.1, 3474.0], [88.2, 3474.0], [88.3, 3474.0], [88.4, 3474.0], [88.5, 3501.0], [88.6, 3501.0], [88.7, 3501.0], [88.8, 3501.0], [88.9, 3625.0], [89.0, 3625.0], [89.1, 3625.0], [89.2, 3625.0], [89.3, 3790.0], [89.4, 3790.0], [89.5, 3790.0], [89.6, 3790.0], [89.7, 3821.0], [89.8, 3821.0], [89.9, 3821.0], [90.0, 3821.0], [90.1, 3859.0], [90.2, 3859.0], [90.3, 3859.0], [90.4, 3859.0], [90.5, 3878.0], [90.6, 3878.0], [90.7, 3878.0], [90.8, 3878.0], [90.9, 3955.0], [91.0, 3955.0], [91.1, 3955.0], [91.2, 3955.0], [91.3, 4235.0], [91.4, 4235.0], [91.5, 4235.0], [91.6, 4235.0], [91.7, 4244.0], [91.8, 4244.0], [91.9, 4244.0], [92.0, 4244.0], [92.1, 4486.0], [92.2, 4486.0], [92.3, 4486.0], [92.4, 4486.0], [92.5, 4493.0], [92.6, 4493.0], [92.7, 4493.0], [92.8, 4493.0], [92.9, 4606.0], [93.0, 4606.0], [93.1, 4606.0], [93.2, 4606.0], [93.3, 4681.0], [93.4, 4681.0], [93.5, 4681.0], [93.6, 4681.0], [93.7, 4699.0], [93.8, 4699.0], [93.9, 4699.0], [94.0, 4699.0], [94.1, 4827.0], [94.2, 4827.0], [94.3, 4827.0], [94.4, 4827.0], [94.5, 5220.0], [94.6, 5220.0], [94.7, 5220.0], [94.8, 5220.0], [94.9, 5279.0], [95.0, 5279.0], [95.1, 5279.0], [95.2, 5279.0], [95.3, 5401.0], [95.4, 5401.0], [95.5, 5401.0], [95.6, 5401.0], [95.7, 5886.0], [95.8, 5886.0], [95.9, 5886.0], [96.0, 5886.0], [96.1, 6369.0], [96.2, 6369.0], [96.3, 6369.0], [96.4, 6369.0], [96.5, 7538.0], [96.6, 7538.0], [96.7, 7538.0], [96.8, 7538.0], [96.9, 8095.0], [97.0, 8095.0], [97.1, 8095.0], [97.2, 8095.0], [97.3, 8219.0], [97.4, 8219.0], [97.5, 8219.0], [97.6, 8219.0], [97.7, 9496.0], [97.8, 9496.0], [97.9, 9496.0], [98.0, 9496.0], [98.1, 9772.0], [98.2, 9772.0], [98.3, 9772.0], [98.4, 9772.0], [98.5, 10993.0], [98.6, 10993.0], [98.7, 10993.0], [98.8, 10993.0], [98.9, 11162.0], [99.0, 11162.0], [99.1, 11162.0], [99.2, 11162.0], [99.3, 12171.0], [99.4, 12171.0], [99.5, 12171.0], [99.6, 12171.0], [99.7, 15507.0], [99.8, 15507.0], [99.9, 15507.0], [100.0, 15507.0]], "isOverall": false, "label": "COMMENT", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 30.0, "series": [{"data": [[700.0, 4.0], [800.0, 10.0], [900.0, 13.0], [1000.0, 11.0], [1100.0, 13.0], [1200.0, 3.0], [1300.0, 7.0], [1400.0, 7.0], [1500.0, 4.0], [1600.0, 5.0], [1700.0, 2.0], [1800.0, 7.0], [1900.0, 7.0], [2000.0, 6.0], [2100.0, 6.0], [2300.0, 3.0], [2200.0, 5.0], [2400.0, 3.0], [2500.0, 5.0], [2600.0, 1.0], [2800.0, 6.0], [2700.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 5.0], [3300.0, 2.0], [3400.0, 1.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 5.0], [4000.0, 1.0], [4100.0, 3.0], [4300.0, 2.0], [4400.0, 2.0], [4800.0, 1.0], [5000.0, 3.0], [5100.0, 1.0], [5200.0, 2.0], [6100.0, 1.0], [5900.0, 1.0], [6200.0, 1.0], [6700.0, 2.0], [7500.0, 1.0], [7800.0, 2.0], [7900.0, 1.0], [8100.0, 2.0], [8000.0, 1.0], [8600.0, 2.0], [8200.0, 1.0], [8400.0, 3.0], [8300.0, 1.0], [8500.0, 1.0], [9100.0, 1.0], [9200.0, 1.0], [9300.0, 2.0], [9700.0, 1.0], [9500.0, 2.0], [9600.0, 1.0], [10100.0, 1.0], [10000.0, 1.0], [9800.0, 1.0], [10200.0, 1.0], [9900.0, 1.0], [10400.0, 1.0], [10300.0, 2.0], [10700.0, 1.0], [11100.0, 1.0], [11200.0, 1.0], [11500.0, 1.0], [11800.0, 2.0], [12600.0, 1.0], [13100.0, 1.0], [13300.0, 1.0], [14200.0, 1.0], [13900.0, 2.0], [14900.0, 1.0], [16300.0, 1.0], [16200.0, 2.0], [16100.0, 1.0], [17200.0, 1.0], [17500.0, 1.0], [20100.0, 1.0], [21000.0, 4.0], [20900.0, 1.0], [22800.0, 1.0], [27100.0, 1.0], [200.0, 16.0], [300.0, 3.0], [500.0, 1.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[36100.0, 1.0], [37700.0, 1.0], [38700.0, 1.0], [43100.0, 1.0], [700.0, 1.0], [800.0, 1.0], [1000.0, 1.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 1.0], [1500.0, 3.0], [1600.0, 3.0], [1700.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 4.0], [2200.0, 3.0], [2300.0, 2.0], [2400.0, 2.0], [2500.0, 1.0], [2600.0, 2.0], [2800.0, 5.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 2.0], [3300.0, 7.0], [3200.0, 3.0], [3400.0, 4.0], [3500.0, 1.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 6.0], [3900.0, 4.0], [4000.0, 3.0], [4100.0, 3.0], [4200.0, 6.0], [4300.0, 3.0], [4400.0, 6.0], [4500.0, 2.0], [4600.0, 1.0], [4700.0, 3.0], [4800.0, 2.0], [4900.0, 3.0], [5000.0, 5.0], [5100.0, 1.0], [5200.0, 4.0], [5300.0, 3.0], [5500.0, 1.0], [5600.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 2.0], [6000.0, 3.0], [6100.0, 3.0], [5900.0, 1.0], [6300.0, 2.0], [6500.0, 2.0], [6400.0, 2.0], [6700.0, 1.0], [6900.0, 2.0], [7100.0, 1.0], [7400.0, 1.0], [7300.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [8000.0, 2.0], [8200.0, 1.0], [8300.0, 2.0], [9000.0, 1.0], [9300.0, 2.0], [9500.0, 1.0], [10100.0, 1.0], [9900.0, 1.0], [10400.0, 1.0], [10900.0, 2.0], [10800.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [11600.0, 2.0], [11400.0, 1.0], [11700.0, 1.0], [11800.0, 2.0], [11900.0, 1.0], [12200.0, 1.0], [12400.0, 1.0], [12700.0, 1.0], [13000.0, 1.0], [13400.0, 1.0], [13800.0, 1.0], [13500.0, 1.0], [13900.0, 1.0], [14300.0, 2.0], [14500.0, 1.0], [16300.0, 1.0], [15900.0, 1.0], [16600.0, 1.0], [16500.0, 1.0], [16700.0, 1.0], [17500.0, 1.0], [18900.0, 2.0], [18500.0, 1.0], [18800.0, 1.0], [19100.0, 1.0], [20000.0, 2.0], [19700.0, 11.0], [19900.0, 4.0], [19800.0, 6.0], [19500.0, 1.0], [19600.0, 1.0], [20300.0, 1.0], [20500.0, 1.0], [20600.0, 1.0], [21000.0, 4.0], [20700.0, 1.0], [22600.0, 1.0], [23100.0, 1.0], [25300.0, 1.0], [25900.0, 1.0], [27000.0, 2.0], [29400.0, 1.0], [29600.0, 1.0], [30200.0, 1.0], [29800.0, 1.0], [29900.0, 1.0], [30500.0, 2.0], [30000.0, 1.0], [34800.0, 2.0], [39600.0, 1.0], [42200.0, 1.0]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[600.0, 7.0], [700.0, 6.0], [800.0, 15.0], [900.0, 24.0], [1000.0, 21.0], [1100.0, 21.0], [1200.0, 11.0], [1300.0, 8.0], [1400.0, 2.0], [1500.0, 5.0], [1600.0, 5.0], [1700.0, 4.0], [1800.0, 4.0], [1900.0, 6.0], [2000.0, 3.0], [2100.0, 5.0], [2200.0, 3.0], [2300.0, 5.0], [2400.0, 4.0], [2500.0, 4.0], [2600.0, 5.0], [2700.0, 2.0], [2800.0, 3.0], [3100.0, 2.0], [3300.0, 4.0], [3200.0, 2.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 3.0], [4000.0, 3.0], [4100.0, 3.0], [4300.0, 1.0], [4600.0, 1.0], [4400.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [4900.0, 2.0], [5300.0, 1.0], [5700.0, 1.0], [6500.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7900.0, 1.0], [8600.0, 1.0], [8200.0, 1.0], [8800.0, 1.0], [9200.0, 1.0], [9400.0, 1.0], [9500.0, 1.0], [10200.0, 1.0], [10100.0, 1.0], [11800.0, 1.0], [16400.0, 1.0], [100.0, 5.0], [200.0, 13.0], [300.0, 13.0], [500.0, 1.0]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[0.0, 14.0], [600.0, 8.0], [700.0, 3.0], [800.0, 8.0], [900.0, 4.0], [1000.0, 3.0], [1100.0, 7.0], [1200.0, 5.0], [1300.0, 6.0], [1400.0, 7.0], [1500.0, 8.0], [1600.0, 7.0], [1700.0, 5.0], [1800.0, 2.0], [1900.0, 8.0], [2000.0, 4.0], [2100.0, 9.0], [2300.0, 4.0], [2200.0, 5.0], [2400.0, 3.0], [2500.0, 8.0], [2600.0, 3.0], [2800.0, 2.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 1.0], [3400.0, 3.0], [3500.0, 1.0], [3700.0, 1.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [4200.0, 2.0], [4400.0, 2.0], [4600.0, 3.0], [4800.0, 1.0], [5200.0, 2.0], [5400.0, 1.0], [5800.0, 1.0], [6300.0, 1.0], [7500.0, 1.0], [8000.0, 1.0], [8200.0, 1.0], [9400.0, 1.0], [9700.0, 1.0], [11100.0, 1.0], [10900.0, 1.0], [12100.0, 1.0], [15500.0, 1.0], [100.0, 11.0], [200.0, 30.0], [300.0, 12.0], [400.0, 13.0], [500.0, 9.0]], "isOverall": false, "label": "COMMENT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 43100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 585.0, "series": [{"data": [[0.0, 131.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 251.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 585.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 33.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 147.0297142857141, "minX": 1.61973924E12, "maxY": 250.0, "series": [{"data": [[1.6197393E12, 147.0297142857141], [1.61973924E12, 250.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6197393E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 77.0, "minX": 1.0, "maxY": 43191.0, "series": [{"data": [[2.0, 259.0], [3.0, 235.0], [5.0, 237.0], [6.0, 231.0], [8.0, 240.5], [9.0, 27132.0], [16.0, 364.5], [17.0, 269.5], [20.0, 244.0], [22.0, 273.0], [25.0, 20120.0], [26.0, 22849.0], [33.0, 581.0], [40.0, 20974.0], [46.0, 1115.0], [54.0, 21031.5], [57.0, 2059.0], [60.0, 21050.0], [62.0, 1304.0], [71.0, 1586.0], [68.0, 1723.3333333333333], [75.0, 831.4285714285714], [74.0, 2716.2], [73.0, 4250.6], [72.0, 1772.0], [78.0, 1427.0], [77.0, 6335.0], [76.0, 736.0], [82.0, 16246.0], [84.0, 860.0], [88.0, 15317.0], [95.0, 800.0], [99.0, 16313.0], [107.0, 962.0], [109.0, 13900.0], [118.0, 3221.0], [126.0, 9659.0], [125.0, 1137.0], [135.0, 3890.0], [133.0, 807.0], [132.0, 2412.0], [130.0, 8630.333333333334], [143.0, 12669.0], [142.0, 14956.0], [141.0, 10211.0], [139.0, 2842.0], [151.0, 9899.0], [150.0, 4118.0], [149.0, 3835.0], [157.0, 3653.0], [156.0, 8480.0], [153.0, 9219.5], [166.0, 1516.0], [165.0, 8599.0], [162.0, 9748.0], [175.0, 5158.666666666667], [174.0, 1087.0], [173.0, 10051.0], [172.0, 12184.5], [168.0, 1685.5], [182.0, 7040.6], [177.0, 11816.0], [176.0, 6211.5], [190.0, 1490.0], [189.0, 10667.0], [188.0, 1183.0], [187.0, 7557.0], [186.0, 2259.0], [184.0, 9661.0], [198.0, 1810.3333333333333], [197.0, 2114.0], [193.0, 5862.0], [192.0, 9218.0], [206.0, 8419.0], [200.0, 5428.0], [211.0, 5293.0], [209.0, 7279.5], [221.0, 8290.0], [219.0, 3740.0], [218.0, 7061.333333333333], [228.0, 9115.0], [227.0, 3499.0], [226.0, 1126.0], [239.0, 3962.25], [236.0, 8662.0], [234.0, 8644.0], [233.0, 4071.25], [232.0, 3983.0], [247.0, 6291.0], [245.0, 3962.3333333333335], [243.0, 1954.0], [242.0, 6179.0], [240.0, 8160.0], [250.0, 1829.2857142857147], [249.0, 2747.611111111111], [248.0, 3234.625], [1.0, 21059.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[167.1840000000001, 4442.999999999999]], "isOverall": false, "label": "POST-Aggregated", "isController": false}, {"data": [[2.0, 43191.0], [3.0, 42257.0], [5.0, 39230.5], [6.0, 36924.5], [8.0, 34858.0], [17.0, 30038.0], [20.0, 27044.5], [22.0, 25907.0], [24.0, 25305.0], [45.0, 23162.0], [68.0, 22612.0], [75.0, 20913.5], [73.0, 21040.0], [77.0, 20169.4], [83.0, 19874.0], [82.0, 20055.0], [80.0, 19833.78571428571], [84.0, 19820.0], [89.0, 19139.0], [103.0, 18863.0], [110.0, 18522.0], [109.0, 18949.0], [112.0, 18908.0], [124.0, 17557.0], [139.0, 16722.0], [149.0, 16610.0], [148.0, 15924.0], [146.0, 16584.0], [153.0, 16374.0], [172.0, 14320.0], [168.0, 14595.0], [183.0, 14350.0], [189.0, 13742.666666666666], [184.0, 13509.0], [195.0, 12707.0], [193.0, 13032.0], [200.0, 12330.5], [215.0, 11829.0], [214.0, 11493.0], [210.0, 11679.0], [209.0, 11824.333333333334], [221.0, 11249.5], [219.0, 11181.0], [218.0, 11639.0], [229.0, 10912.0], [224.0, 10886.0], [239.0, 9384.0], [238.0, 9378.0], [237.0, 9851.5], [233.0, 10237.0], [245.0, 9025.0], [250.0, 3788.2536231884064], [249.0, 6914.900000000001], [248.0, 8086.5]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[196.74400000000003, 10198.396]], "isOverall": false, "label": "USER-Aggregated", "isController": false}, {"data": [[2.0, 204.0], [3.0, 304.0], [4.0, 229.0], [5.0, 209.0], [6.0, 198.0], [7.0, 242.0], [8.0, 211.0], [9.0, 196.0], [10.0, 225.0], [11.0, 246.0], [12.0, 312.0], [13.0, 308.0], [14.0, 305.0], [15.0, 298.0], [16.0, 294.0], [17.0, 322.0], [18.0, 197.0], [19.0, 235.0], [20.0, 208.0], [21.0, 191.0], [22.0, 195.0], [23.0, 355.0], [24.0, 305.0], [25.0, 320.0], [26.0, 282.0], [27.0, 3173.0], [28.0, 308.0], [29.0, 330.0], [30.0, 389.0], [31.0, 337.0], [33.0, 535.0], [32.0, 360.0], [35.0, 609.0], [34.0, 661.0], [37.0, 780.0], [36.0, 987.0], [39.0, 1052.0], [38.0, 681.0], [41.0, 703.0], [40.0, 791.0], [43.0, 684.0], [42.0, 1622.0], [45.0, 838.0], [44.0, 656.0], [47.0, 857.0], [46.0, 922.0], [49.0, 1327.0], [48.0, 943.0], [51.0, 1194.0], [50.0, 1172.0], [53.0, 1184.0], [52.0, 2197.0], [55.0, 1090.0], [54.0, 1249.0], [57.0, 1004.0], [56.0, 2296.0], [59.0, 1638.0], [58.0, 1075.0], [61.0, 962.0], [60.0, 1004.0], [63.0, 1101.0], [62.0, 1105.0], [67.0, 1660.0], [66.0, 1093.0], [65.0, 971.0], [64.0, 1992.0], [71.0, 16469.0], [70.0, 1047.0], [69.0, 1591.0], [68.0, 1213.0], [75.0, 911.0], [74.0, 1134.0], [73.0, 1215.0], [72.0, 1339.0], [79.0, 1516.0], [78.0, 1799.0], [77.0, 874.0], [76.0, 933.0], [83.0, 722.0], [82.0, 817.0], [81.0, 795.0], [80.0, 830.0], [87.0, 1825.0], [86.0, 2067.0], [85.0, 1317.0], [84.0, 949.0], [91.0, 1656.0], [90.0, 4135.0], [89.0, 1072.0], [88.0, 2477.0], [95.0, 11851.0], [94.0, 1758.0], [93.0, 930.0], [92.0, 902.0], [99.0, 3328.0], [98.0, 1196.0], [97.0, 1014.0], [96.0, 2556.0], [103.0, 960.0], [102.0, 929.0], [101.0, 677.0], [100.0, 9266.0], [107.0, 1805.0], [106.0, 963.0], [105.0, 985.0], [104.0, 911.0], [111.0, 846.0], [110.0, 1045.0], [109.0, 825.0], [108.0, 10107.0], [115.0, 913.0], [114.0, 884.0], [113.0, 853.0], [112.0, 1112.0], [119.0, 694.0], [118.0, 916.0], [117.0, 9529.0], [116.0, 3914.0], [123.0, 1854.0], [122.0, 789.0], [121.0, 924.0], [120.0, 858.0], [127.0, 10206.0], [126.0, 4314.0], [125.0, 1530.0], [124.0, 882.0], [135.0, 3937.0], [134.0, 4093.0], [133.0, 969.0], [132.0, 911.0], [131.0, 1282.0], [130.0, 1954.0], [129.0, 1947.0], [128.0, 4906.0], [143.0, 1030.0], [142.0, 2103.0], [141.0, 1076.0], [140.0, 1922.0], [139.0, 1251.0], [138.0, 1207.0], [137.0, 3262.0], [136.0, 917.0], [151.0, 1186.0], [150.0, 866.0], [149.0, 1497.0], [148.0, 1537.0], [147.0, 9480.0], [146.0, 2330.0], [145.0, 6737.0], [144.0, 8236.0], [159.0, 1839.0], [158.0, 4176.0], [157.0, 4079.0], [156.0, 1019.0], [155.0, 1023.0], [154.0, 900.0], [153.0, 1235.0], [152.0, 2128.0], [167.0, 1111.0], [166.0, 3385.0], [165.0, 6873.0], [164.0, 1118.0], [163.0, 1048.0], [162.0, 1453.0], [161.0, 1255.0], [160.0, 2804.0], [175.0, 3894.0], [174.0, 8622.0], [173.0, 1100.0], [172.0, 1823.0], [170.0, 3577.0], [169.0, 7981.0], [168.0, 1948.0], [183.0, 1114.0], [182.0, 966.0], [181.0, 5140.0], [180.0, 2931.5], [178.0, 1305.0], [177.0, 4999.0], [176.0, 5790.0], [191.0, 2018.0], [190.0, 1084.0], [189.0, 2411.0], [188.0, 1107.0], [187.0, 8858.0], [186.0, 4028.0], [185.0, 2609.0], [184.0, 1007.0], [198.0, 1205.0], [197.0, 2779.0], [196.0, 1091.0], [195.0, 1128.0], [194.0, 2306.0], [193.0, 2153.0], [192.0, 1114.0], [207.0, 4439.0], [206.0, 2869.0], [205.0, 2429.0], [204.0, 3729.0], [203.0, 5372.0], [202.0, 2926.0], [200.0, 1637.0], [215.0, 1359.0], [214.0, 3134.0], [213.0, 3569.0], [212.0, 5011.0], [211.0, 2489.0], [210.0, 2825.0], [209.0, 936.0], [208.0, 1187.0], [223.0, 6548.0], [222.0, 1923.0], [221.0, 1699.0], [220.0, 2099.0], [219.0, 1767.0], [218.0, 3442.0], [217.0, 4609.0], [216.0, 1059.0], [231.0, 1393.0], [230.0, 1309.0], [229.0, 2331.0], [228.0, 1708.0], [227.0, 3955.0], [226.0, 4147.0], [225.0, 2302.0], [224.0, 2625.0], [239.0, 1135.0], [238.0, 2618.0], [237.0, 3381.0], [236.0, 1360.0], [235.0, 1032.0], [234.0, 800.0], [233.0, 2204.0], [232.0, 1555.0], [247.0, 2798.0], [246.0, 2680.0], [245.0, 2272.0], [244.0, 1037.0], [243.0, 1180.0], [242.0, 1262.0], [241.0, 2639.0], [240.0, 2101.0], [250.0, 1198.0], [249.0, 1254.0], [248.0, 888.0], [1.0, 215.0]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[125.51600000000005, 2030.3039999999994]], "isOverall": false, "label": "REACT-Aggregated", "isController": false}, {"data": [[2.0, 103.0], [3.0, 90.0], [5.0, 77.5], [6.0, 89.0], [7.0, 82.0], [8.0, 83.0], [9.0, 156.0], [13.0, 114.0], [15.0, 77.0], [16.0, 142.0], [17.0, 99.5], [19.0, 87.0], [20.0, 7804.5], [22.0, 79.0], [24.0, 91.0], [25.0, 94.0], [26.0, 6651.5], [32.0, 103.0], [34.0, 774.25], [44.0, 174.0], [48.0, 1621.0], [51.0, 291.0], [53.0, 1926.0], [57.0, 1192.8], [59.0, 1667.0], [62.0, 292.0], [67.0, 225.0], [66.0, 276.0], [71.0, 841.1818181818182], [68.0, 1296.0], [75.0, 355.3333333333333], [74.0, 394.0], [73.0, 484.1666666666667], [72.0, 803.0], [77.0, 447.5], [76.0, 221.0], [80.0, 235.0], [89.0, 534.0], [88.0, 293.0], [98.0, 1597.3333333333335], [96.0, 968.0], [107.0, 204.0], [111.0, 2078.5], [110.0, 4493.0], [115.0, 2111.0], [114.0, 3625.0], [112.0, 4386.0], [123.0, 1427.0], [122.0, 430.0], [120.0, 9772.0], [126.0, 2990.0], [125.0, 4373.0], [124.0, 2306.25], [134.0, 1944.0], [133.0, 1626.0], [131.0, 667.0], [130.0, 2415.125], [129.0, 267.0], [128.0, 3027.0], [139.0, 582.0], [151.0, 6831.5], [149.0, 3790.0], [148.0, 1287.0], [158.0, 2598.0], [157.0, 2907.0], [153.0, 1246.5], [163.0, 898.0], [162.0, 2296.0], [161.0, 2134.0], [160.0, 972.3333333333333], [172.0, 2431.4], [170.0, 479.0], [168.0, 369.5], [183.0, 2916.3333333333335], [182.0, 1966.6666666666667], [178.0, 1693.0], [177.0, 263.0], [176.0, 377.0], [191.0, 836.0], [190.0, 4244.0], [189.0, 3414.0], [187.0, 1080.0], [186.0, 2737.0], [197.0, 3859.0], [196.0, 717.0], [195.0, 2576.0], [194.0, 2111.0], [193.0, 4429.5], [205.0, 2666.0], [203.0, 2467.0], [200.0, 2185.0], [214.0, 1225.0], [212.0, 1501.0], [211.0, 236.0], [208.0, 1425.0], [223.0, 2066.6666666666665], [221.0, 1084.5], [219.0, 3057.5], [216.0, 2545.0], [230.0, 6369.0], [229.0, 4699.0], [227.0, 3501.0], [224.0, 2405.3333333333335], [239.0, 2343.285714285714], [238.0, 4030.0], [237.0, 2104.2], [236.0, 1987.0], [234.0, 1750.0], [233.0, 669.0], [247.0, 2537.5], [245.0, 1984.2500000000002], [243.0, 1661.0], [242.0, 486.0], [241.0, 1455.0], [240.0, 3457.0], [250.0, 1299.5], [249.0, 1244.076923076923], [248.0, 1576.2727272727273], [1.0, 226.0]], "isOverall": false, "label": "COMMENT", "isController": false}, {"data": [[150.1599999999999, 1780.412]], "isOverall": false, "label": "COMMENT-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 250.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3385.516666666667, "minX": 1.61973924E12, "maxY": 64175.15, "series": [{"data": [[1.6197393E12, 64175.15], [1.61973924E12, 8783.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6197393E12, 22812.4], [1.61973924E12, 3385.516666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6197393E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1045.0, "minX": 1.61973924E12, "maxY": 15610.492857142859, "series": [{"data": [[1.6197393E12, 4594.721518987342], [1.61973924E12, 1677.0]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.6197393E12, 15610.492857142859], [1.61973924E12, 3310.272727272728]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[1.6197393E12, 2030.3039999999994]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[1.6197393E12, 1786.3427419354848], [1.61973924E12, 1045.0]], "isOverall": false, "label": "COMMENT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6197393E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1045.0, "minX": 1.61973924E12, "maxY": 11442.278571428571, "series": [{"data": [[1.6197393E12, 4196.37552742616], [1.61973924E12, 1675.7692307692307]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.6197393E12, 11442.278571428571], [1.61973924E12, 3310.136363636364]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[1.6197393E12, 2030.2919999999983]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[1.6197393E12, 1786.3185483870964], [1.61973924E12, 1045.0]], "isOverall": false, "label": "COMMENT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6197393E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.61973924E12, "maxY": 11145.43571428571, "series": [{"data": [[1.6197393E12, 3810.025316455697], [1.61973924E12, 1345.923076923077]], "isOverall": false, "label": "POST", "isController": false}, {"data": [[1.6197393E12, 11145.43571428571], [1.61973924E12, 2325.6000000000004]], "isOverall": false, "label": "USER", "isController": false}, {"data": [[1.6197393E12, 1638.1000000000008]], "isOverall": false, "label": "REACT", "isController": false}, {"data": [[1.6197393E12, 9.971774193548386], [1.61973924E12, 0.0]], "isOverall": false, "label": "COMMENT", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6197393E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.61973924E12, "maxY": 43191.0, "series": [{"data": [[1.6197393E12, 43191.0], [1.61973924E12, 5251.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6197393E12, 11098.000000000007], [1.61973924E12, 4560.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6197393E12, 33010.44999999973], [1.61973924E12, 5249.7]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6197393E12, 16454.749999999993], [1.61973924E12, 4923.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6197393E12, 75.0], [1.61973924E12, 567.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6197393E12, 1872.0], [1.61973924E12, 3281.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6197393E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 197.0, "minX": 1.0, "maxY": 21059.0, "series": [{"data": [[32.0, 3314.0], [2.0, 220.5], [36.0, 2022.0], [37.0, 2798.0], [38.0, 2903.5], [41.0, 1374.0], [40.0, 2722.5], [42.0, 2497.5], [44.0, 2520.0], [45.0, 1944.0], [46.0, 2437.0], [3.0, 231.0], [50.0, 830.0], [52.0, 4234.5], [4.0, 235.5], [5.0, 304.0], [6.0, 219.5], [8.0, 232.5], [9.0, 235.0], [12.0, 270.5], [14.0, 1494.0], [16.0, 558.0], [1.0, 197.0], [23.0, 2354.0], [29.0, 294.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 21059.0], [36.0, 21050.0], [41.0, 21031.5], [46.0, 19782.0], [50.0, 19851.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 52.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4234.5, "series": [{"data": [[32.0, 3312.0], [2.0, 220.5], [36.0, 2021.0], [37.0, 2680.0], [38.0, 2662.5], [41.0, 1374.0], [40.0, 2722.5], [42.0, 2497.5], [44.0, 2517.5], [45.0, 1944.0], [46.0, 2437.0], [3.0, 231.0], [50.0, 830.0], [52.0, 4234.5], [4.0, 235.5], [5.0, 304.0], [6.0, 219.5], [8.0, 232.0], [9.0, 235.0], [12.0, 269.0], [14.0, 1494.0], [16.0, 556.0], [1.0, 197.0], [23.0, 2354.0], [29.0, 294.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [36.0, 0.0], [41.0, 0.0], [46.0, 0.0], [50.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 52.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.25, "minX": 1.61973924E12, "maxY": 10.416666666666666, "series": [{"data": [[1.6197393E12, 10.416666666666666], [1.61973924E12, 6.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6197393E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.61973924E12, "maxY": 14.033333333333333, "series": [{"data": [[1.6197393E12, 14.033333333333333], [1.61973924E12, 2.0833333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6197393E12, 0.13333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.6197393E12, 0.4166666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.ConnectTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6197393E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.61973924E12, "maxY": 4.166666666666667, "series": [{"data": [[1.6197393E12, 0.48333333333333334]], "isOverall": false, "label": "USER-failure", "isController": false}, {"data": [[1.6197393E12, 0.06666666666666667]], "isOverall": false, "label": "POST-failure", "isController": false}, {"data": [[1.6197393E12, 1.85], [1.61973924E12, 1.8333333333333333]], "isOverall": false, "label": "USER-success", "isController": false}, {"data": [[1.6197393E12, 3.8833333333333333], [1.61973924E12, 0.21666666666666667]], "isOverall": false, "label": "POST-success", "isController": false}, {"data": [[1.6197393E12, 4.166666666666667]], "isOverall": false, "label": "REACT-success", "isController": false}, {"data": [[1.6197393E12, 4.133333333333334], [1.61973924E12, 0.03333333333333333]], "isOverall": false, "label": "COMMENT-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6197393E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.61973924E12, "maxY": 14.033333333333333, "series": [{"data": [[1.6197393E12, 14.033333333333333], [1.61973924E12, 2.0833333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6197393E12, 0.55]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6197393E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

